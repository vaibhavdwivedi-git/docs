{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Rescan Explorer",
    "description": "Api reference for the Rescan Explorer",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.blockflow.network/rest"
    }
  ],
  "paths": {
    "/eigenlayer/all-distribution-roots": {
      "get": {
        "summary": "All Distribution Roots",
        "description": "Fetches distinct distribution root entries with their latest information, supporting pagination and filtering based on various query parameters.",
        "operationId": "getDistributionRoots",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination (default is 1)."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page (default is 12)."
            }
          },
          {
            "name": "rootIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The root index to filter the distribution roots."
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to filter by active status (true or false)."
            }
          },
          {
            "name": "startTimestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "The start timestamp to filter distribution roots."
            }
          },
          {
            "name": "endTimestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "The end timestamp to filter distribution roots."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with distribution root data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rootIndex": {
                            "type": "string",
                            "description": "The unique identifier for the distribution root."
                          },
                          "root": {
                            "type": "string",
                            "description": "The root value associated with the distribution root."
                          },
                          "rewardsCalculationEndTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp marking the end of the rewards calculation."
                          },
                          "activatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp when the distribution root was activated."
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Indicates whether the distribution root is active."
                          },
                          "updatedAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string",
                                "description": "The block number for the last update."
                              },
                              "blockTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of the block when the last update occurred."
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash of the last update."
                              }
                            }
                          },
                          "createdAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string",
                                "description": "The block number when the distribution root was created."
                              },
                              "blockTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of the block when the distribution root was created."
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash when the distribution root was created."
                              }
                            }
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp when the distribution root was created."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of distribution roots."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates whether there are more pages."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalDistributionRoots": {
                              "type": "integer",
                              "description": "The total number of distribution roots."
                            },
                            "activeDistributionRoots": {
                              "type": "integer",
                              "description": "The total number of active distribution roots."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/distribution-roots-by-status": {
      "get": {
        "operationId": "getAllDistributionRootsByStatus",
        "summary": "Retrieve all distribution roots by status",
        "description": "Fetches all distribution root records by status with pagination support. Returns the most recent root for each rootIndex.",
        "tags": [
          "Distribution Roots"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The status of distribution roots to filter by",
              "example": "disabled"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of distribution root records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rootIndex": {
                            "type": "number",
                            "description": "The index of the distribution root",
                            "example": 1
                          },
                          "root": {
                            "type": "string",
                            "description": "The Merkle root hash",
                            "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                          },
                          "rewardsCalculationEndTimestamp": {
                            "type": "number",
                            "description": "The timestamp when rewards calculation ended",
                            "example": 1727836560
                          },
                          "activatedAt": {
                            "type": "number",
                            "description": "The timestamp when the root was activated",
                            "example": 1727836560
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the distribution root",
                            "example": "active"
                          },
                          "createdAt": {
                            "type": "number",
                            "description": "The timestamp when the record was created",
                            "example": 1727836560
                          },
                          "updatedAt": {
                            "type": "number",
                            "description": "The timestamp when the record was last updated",
                            "example": 1727836560
                          }
                        },
                        "required": [
                          "rootIndex",
                          "root",
                          "rewardsCalculationEndTimestamp",
                          "activatedAt",
                          "status",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "page": {
                          "type": "number",
                          "description": "The page number of the current response",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "page",
                        "limit"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-rewards-claim": {
      "get": {
        "operationId": "getAllRewardClaims",
        "summary": "Retrieve all reward claims with statistics",
        "description": "Fetches reward claims with pagination support, filtering options, and comprehensive statistics about the claims.",
        "tags": [
          "Reward Claims"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          },
          {
            "name": "earner",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Address of the reward earner to filter by",
              "example": "0x1234567890abcdef1234567890abcdef12345678"
            }
          },
          {
            "name": "claimer",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Address of the claimer to filter by",
              "example": "0x1234567890abcdef1234567890abcdef12345678"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Address of the recipient to filter by",
              "example": "0x1234567890abcdef1234567890abcdef12345678"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Address of the token to filter by",
              "example": "0x1234567890abcdef1234567890abcdef12345678"
            }
          },
          {
            "name": "root",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Merkle root hash to filter by",
              "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of reward claims with statistics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "root": {
                            "type": "string",
                            "description": "The Merkle root hash",
                            "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                          },
                          "earner": {
                            "type": "string",
                            "description": "Address of the reward earner",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "claimer": {
                            "type": "string",
                            "description": "Address of the claimer",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Address of the recipient",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "token": {
                            "type": "string",
                            "description": "Address of the token",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "claimedAmount": {
                            "type": "string",
                            "description": "Amount of tokens claimed",
                            "example": "1000000000000000000"
                          },
                          "claimedAt": {
                            "type": "number",
                            "description": "Timestamp of when the claim was made",
                            "example": 1727836560
                          }
                        },
                        "required": [
                          "root",
                          "earner",
                          "claimer",
                          "recipient",
                          "token",
                          "claimedAmount",
                          "claimedAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "page": {
                          "type": "number",
                          "description": "The page number of the current response",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "page",
                        "limit"
                      ]
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "distinctRoots": {
                          "type": "number",
                          "description": "Number of unique Merkle roots",
                          "example": 5
                        },
                        "distinctClaimers": {
                          "type": "number",
                          "description": "Number of unique claimers",
                          "example": 100
                        },
                        "distinctEarners": {
                          "type": "number",
                          "description": "Number of unique earners",
                          "example": 95
                        },
                        "distinctRecipients": {
                          "type": "number",
                          "description": "Number of unique recipients",
                          "example": 98
                        },
                        "distinctTokens": {
                          "type": "number",
                          "description": "Number of unique tokens",
                          "example": 3
                        },
                        "totalClaimedAmount": {
                          "type": "string",
                          "description": "Total amount claimed across all tokens",
                          "example": "1000000000000000000000"
                        },
                        "firstClaimDate": {
                          "type": "number",
                          "description": "Timestamp of the first claim",
                          "example": 1727836560,
                          "nullable": true
                        },
                        "lastClaimDate": {
                          "type": "number",
                          "description": "Timestamp of the last claim",
                          "example": 1727836560,
                          "nullable": true
                        },
                        "tokensSummary": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "totalAmount": {
                                "type": "string",
                                "description": "Total amount claimed for this token",
                                "example": "500000000000000000000"
                              },
                              "claimsCount": {
                                "type": "number",
                                "description": "Number of claims for this token",
                                "example": 50
                              }
                            },
                            "required": [
                              "totalAmount",
                              "claimsCount"
                            ]
                          },
                          "description": "Summary of claims grouped by token"
                        }
                      },
                      "required": [
                        "distinctRoots",
                        "distinctClaimers",
                        "distinctEarners",
                        "distinctRecipients",
                        "distinctTokens",
                        "totalClaimedAmount",
                        "firstClaimDate",
                        "lastClaimDate",
                        "tokensSummary"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta",
                    "statistics"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-avs-rewards-submission": {
      "get": {
        "operationId": "getAVSRewardsSubmissions",
        "summary": "Retrieve all AVS rewards submissions",
        "description": "Fetches AVS rewards submissions with pagination support and strategy information.",
        "tags": [
          "AVS Rewards"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of AVS rewards submissions with pagination metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "avs": {
                            "type": "string",
                            "description": "The AVS identifier",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "submissionNonce": {
                            "type": "string",
                            "description": "The nonce of the submission",
                            "example": "1"
                          },
                          "rewardsSubmissionHash": {
                            "type": "string",
                            "description": "Hash of the rewards submission",
                            "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                          },
                          "tokenUsed": {
                            "type": "string",
                            "description": "Address of the token used for rewards",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "tokenAmount": {
                            "type": "string",
                            "description": "Amount of tokens for rewards",
                            "example": "1000000000000000000"
                          },
                          "startTimestamp": {
                            "type": "number",
                            "description": "Start timestamp of the rewards period",
                            "example": 1727836560
                          },
                          "duration": {
                            "type": "number",
                            "description": "Duration of the rewards period in seconds",
                            "example": 604800
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of strategy addresses",
                            "example": [
                              "0x1234567890abcdef1234567890abcdef12345678",
                              "0x9876543210abcdef1234567890abcdef12345678"
                            ]
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "Timestamp of the block when submission was made",
                            "example": 1727836560
                          }
                        },
                        "required": [
                          "avs",
                          "submissionNonce",
                          "rewardsSubmissionHash",
                          "tokenUsed",
                          "tokenAmount",
                          "startTimestamp",
                          "duration",
                          "strategies",
                          "blockTimestamp"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "page": {
                          "type": "number",
                          "description": "The current page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "The number of records per page",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "page",
                        "limit"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-rewards-submission-by-avs": {
      "get": {
        "operationId": "getAVSRewardsSubmissionsByAVS",
        "summary": "Retrieve all AVS rewards submissions of an AVS",
        "description": "Fetches AVS rewards submissions of an AVS with pagination support and strategy information.",
        "tags": [
          "AVS Rewards"
        ],
        "parameters": [
          {
            "name": "avs",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The address of AVS to filter by",
              "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of AVS rewards submissions with pagination metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "avs": {
                            "type": "string",
                            "description": "The AVS identifier",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "submissionNonce": {
                            "type": "string",
                            "description": "The nonce of the submission",
                            "example": "1"
                          },
                          "rewardsSubmissionHash": {
                            "type": "string",
                            "description": "Hash of the rewards submission",
                            "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                          },
                          "tokenUsed": {
                            "type": "string",
                            "description": "Address of the token used for rewards",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "tokenAmount": {
                            "type": "string",
                            "description": "Amount of tokens for rewards",
                            "example": "1000000000000000000"
                          },
                          "startTimestamp": {
                            "type": "number",
                            "description": "Start timestamp of the rewards period",
                            "example": 1727836560
                          },
                          "duration": {
                            "type": "number",
                            "description": "Duration of the rewards period in seconds",
                            "example": 604800
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of strategy addresses",
                            "example": [
                              "0x1234567890abcdef1234567890abcdef12345678",
                              "0x9876543210abcdef1234567890abcdef12345678"
                            ]
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "Timestamp of the block when submission was made",
                            "example": 1727836560
                          }
                        },
                        "required": [
                          "avs",
                          "submissionNonce",
                          "rewardsSubmissionHash",
                          "tokenUsed",
                          "tokenAmount",
                          "startTimestamp",
                          "duration",
                          "strategies",
                          "blockTimestamp"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "page": {
                          "type": "number",
                          "description": "The current page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "The number of records per page",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "page",
                        "limit"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-rewards-submission-by-tokenUsed": {
      "get": {
        "operationId": "getAVSRewardsSubmissionsByTokenUsed",
        "summary": "Retrieve all AVS rewards submissions of given Token",
        "description": "Fetches AVS rewards submissions of an Token with pagination support and strategy information.",
        "tags": [
          "AVS Rewards"
        ],
        "parameters": [
          {
            "name": "tokenUsed",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The address of Token to filter by",
              "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of AVS rewards submissions with pagination metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "avs": {
                            "type": "string",
                            "description": "The AVS identifier",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "submissionNonce": {
                            "type": "string",
                            "description": "The nonce of the submission",
                            "example": "1"
                          },
                          "rewardsSubmissionHash": {
                            "type": "string",
                            "description": "Hash of the rewards submission",
                            "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                          },
                          "tokenUsed": {
                            "type": "string",
                            "description": "Address of the token used for rewards",
                            "example": "0x1234567890abcdef1234567890abcdef12345678"
                          },
                          "tokenAmount": {
                            "type": "string",
                            "description": "Amount of tokens for rewards",
                            "example": "1000000000000000000"
                          },
                          "startTimestamp": {
                            "type": "number",
                            "description": "Start timestamp of the rewards period",
                            "example": 1727836560
                          },
                          "duration": {
                            "type": "number",
                            "description": "Duration of the rewards period in seconds",
                            "example": 604800
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of strategy addresses",
                            "example": [
                              "0x1234567890abcdef1234567890abcdef12345678",
                              "0x9876543210abcdef1234567890abcdef12345678"
                            ]
                          },
                          "blockTimestamp": {
                            "type": "number",
                            "description": "Timestamp of the block when submission was made",
                            "example": 1727836560
                          }
                        },
                        "required": [
                          "avs",
                          "submissionNonce",
                          "rewardsSubmissionHash",
                          "tokenUsed",
                          "tokenAmount",
                          "startTimestamp",
                          "duration",
                          "strategies",
                          "blockTimestamp"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "page": {
                          "type": "number",
                          "description": "The current page number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "description": "The number of records per page",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "page",
                        "limit"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-rewards-submission-by-hash": {
      "get": {
        "operationId": "getAVSRewardsSubmissionByHash",
        "summary": "Retrieve AVS rewards submission by hash",
        "description": "Fetches detailed information about a specific AVS rewards submission using its hash.",
        "tags": [
          "AVS Rewards"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The rewards submission hash to look up",
              "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The detailed information about the AVS rewards submission.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "avs": {
                          "type": "string",
                          "description": "The AVS identifier",
                          "example": "0x1234567890abcdef1234567890abcdef12345678"
                        },
                        "submissionNonce": {
                          "type": "string",
                          "description": "The nonce of the submission",
                          "example": "1"
                        },
                        "rewardsSubmissionHash": {
                          "type": "string",
                          "description": "Hash of the rewards submission",
                          "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                        },
                        "tokenUsed": {
                          "type": "string",
                          "description": "Address of the token used for rewards",
                          "example": "0x1234567890abcdef1234567890abcdef12345678"
                        },
                        "tokenAmount": {
                          "type": "string",
                          "description": "Amount of tokens for rewards",
                          "example": "1000000000000000000"
                        },
                        "startTimestamp": {
                          "type": "number",
                          "description": "Start timestamp of the rewards period",
                          "example": 1727836560
                        },
                        "duration": {
                          "type": "number",
                          "description": "Duration of the rewards period in seconds",
                          "example": 604800
                        },
                        "strategyAndMultipliers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "strategy": {
                                "type": "string",
                                "description": "Address of the strategy",
                                "example": "0x1234567890abcdef1234567890abcdef12345678"
                              },
                              "multiplier": {
                                "type": "number",
                                "description": "Strategy multiplier value (normalized to 18 decimals)",
                                "example": 1.5
                              }
                            },
                            "required": [
                              "strategy",
                              "multiplier"
                            ]
                          },
                          "description": "Array of strategy addresses and their corresponding multipliers"
                        },
                        "blockTimestamp": {
                          "type": "number",
                          "description": "Timestamp of the block when submission was made",
                          "example": 1727836560
                        }
                      },
                      "required": [
                        "avs",
                        "submissionNonce",
                        "rewardsSubmissionHash",
                        "tokenUsed",
                        "tokenAmount",
                        "startTimestamp",
                        "duration",
                        "strategyAndMultipliers",
                        "blockTimestamp"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/all-batches": {
      "get": {
        "summary": "All Batches",
        "description": "Fetches all distinct batch entries with their latest information.",
        "operationId": "getBatchData",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination (default is 1)."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page (default is 12)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with batch data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "batchId": {
                            "type": "string",
                            "description": "The unique identifier for the batch."
                          },
                          "batchHeaderHash": {
                            "type": "string",
                            "description": "The hash of the batch header."
                          },
                          "blobsLength": {
                            "type": "integer",
                            "description": "The length of the blobs in the batch."
                          },
                          "quorumNumbers": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "The quorum numbers associated with the batch."
                            },
                            "description": "List of quorum numbers."
                          },
                          "blobHeadersRoot": {
                            "type": "string",
                            "description": "The root of the blob headers."
                          },
                          "referenceBlockNumber": {
                            "type": "integer",
                            "description": "The reference block number."
                          },
                          "signedStakeForQuorums": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quorumNumber": {
                                  "type": "string",
                                  "description": "The quorum number for which the stake is signed."
                                },
                                "stakeAmount": {
                                  "type": "integer",
                                  "description": "The amount of signed stake for the quorum."
                                }
                              }
                            },
                            "description": "Signed stake for each quorum."
                          },
                          "transactionHash": {
                            "type": "string",
                            "description": "The transaction hash associated with the batch."
                          },
                          "blockTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of the block."
                          },
                          "blockNumber": {
                            "type": "integer",
                            "description": "The block number for the batch."
                          },
                          "operators": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "nonSigners": {
                                  "type": "integer",
                                  "description": "The count of non-signers for the batch."
                                },
                                "signers": {
                                  "type": "integer",
                                  "description": "The count of signers for the batch."
                                }
                              }
                            },
                            "description": "Details about operators in the batch."
                          },
                          "quorumStakes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quorumNumber": {
                                  "type": "string",
                                  "description": "The quorum number."
                                },
                                "stakeAmount": {
                                  "type": "integer",
                                  "description": "The amount of stake for the quorum."
                                }
                              }
                            },
                            "description": "Quorum stakes for the batch."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of distinct batches."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "lastUpdateTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of the latest update."
                        },
                        "latestBlock": {
                          "type": "integer",
                          "description": "The latest block number."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalDistinctBatches": {
                              "type": "integer",
                              "description": "Total number of distinct batches."
                            },
                            "batchesWithNonSigners": {
                              "type": "integer",
                              "description": "Number of batches with non-signers."
                            },
                            "batchesWithNonSignersPercentage": {
                              "type": "number",
                              "format": "float",
                              "description": "Percentage of batches with non-signers."
                            },
                            "batchesWithSigners": {
                              "type": "integer",
                              "description": "Number of batches with signers."
                            },
                            "batchesWithSignersPercentage": {
                              "type": "number",
                              "format": "float",
                              "description": "Percentage of batches with signers."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/batch-info": {
      "get": {
        "summary": "Batch Info",
        "description": "Fetches detailed information about a batch, including metadata, logs, transactions, and block details.",
        "operationId": "getBatchData",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "batchId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "The unique identifier for the batch."
            }
          },
          {
            "name": "batchHeaderHash",
            "in": "query",
            "required": false,
            "description": "The batch header hash to identify the batch data",
            "schema": {
              "type": "string",
              "description": "The unique identifier for the batch."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched batch data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "batchId": {
                          "type": "string"
                        },
                        "batchHeaderHash": {
                          "type": "string"
                        },
                        "blobsLength": {
                          "type": "integer"
                        },
                        "quorumNumbers": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "blobHeadersRoot": {
                          "type": "string"
                        },
                        "referenceBlockNumber": {
                          "type": "integer"
                        },
                        "signedStakeForQuorums": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "transactionHash": {
                          "type": "string"
                        },
                        "blockTimestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "blockNumber": {
                          "type": "integer"
                        },
                        "batchMetadata": {
                          "type": "object",
                          "properties": {
                            "apkG2": {
                              "type": "string"
                            },
                            "sigma": {
                              "type": "string"
                            },
                            "quorumApks": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "quorumApkIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerPubkeys": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "totalStakeIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerStakeIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerQuorumBitmapIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "operators": {
                          "type": "object",
                          "properties": {
                            "signers": {
                              "type": "string"
                            },
                            "nonSigners": {
                              "type": "string"
                            }
                          }
                        },
                        "signers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "nonSigners": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "quorumStakes": {
                          "type": "object",
                          "properties": {
                            "quorumNumber": {
                              "type": "string"
                            },
                            "stake": {
                              "type": "string"
                            }
                          }
                        },
                        "signatoryRecordHash": {
                          "type": "string"
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "logIndex": {
                                "type": "string"
                              },
                              "logTransactionHash": {
                                "type": "string"
                              },
                              "logTransactionIndex": {
                                "type": "string"
                              },
                              "logAddress": {
                                "type": "string"
                              },
                              "logData": {
                                "type": "string"
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "transactionHash": {
                                "type": "string"
                              },
                              "nonce": {
                                "type": "integer"
                              },
                              "index": {
                                "type": "integer"
                              },
                              "fromAddress": {
                                "type": "string"
                              },
                              "toAddress": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "gas": {
                                "type": "integer"
                              },
                              "gasPrice": {
                                "type": "string"
                              },
                              "receiptCumulativeGasUsed": {
                                "type": "integer"
                              },
                              "receiptGasUsed": {
                                "type": "integer"
                              },
                              "receiptStatus": {
                                "type": "string"
                              },
                              "effectiveGasPrice": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "block": {
                          "type": "object",
                          "properties": {
                            "blockNumber": {
                              "type": "integer"
                            },
                            "blockHash": {
                              "type": "string"
                            },
                            "parentHash": {
                              "type": "string"
                            },
                            "nonce": {
                              "type": "string"
                            },
                            "sha3Uncles": {
                              "type": "string"
                            },
                            "logsBloom": {
                              "type": "string"
                            },
                            "transactionsRoot": {
                              "type": "string"
                            },
                            "stateRoot": {
                              "type": "string"
                            },
                            "receiptsRoot": {
                              "type": "string"
                            },
                            "miner": {
                              "type": "string"
                            },
                            "difficulty": {
                              "type": "integer"
                            },
                            "totalDifficulty": {
                              "type": "integer"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "extraData": {
                              "type": "string"
                            },
                            "gasLimit": {
                              "type": "integer"
                            },
                            "gasUsed": {
                              "type": "integer"
                            },
                            "transactionCount": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "batchId": {
                          "type": "string"
                        },
                        "blockNumber": {
                          "type": "integer"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/batch-by-hash": {
      "get": {
        "summary": "Batch Info by Hash",
        "description": "Fetches detailed information about a batch, including metadata, logs, transactions, and block details.",
        "operationId": "getBatchData",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "batchHeaderHash",
            "in": "query",
            "required": true,
            "description": "The batch header hash to identify the batch data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched batch data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "batchId": {
                          "type": "string"
                        },
                        "batchHeaderHash": {
                          "type": "string"
                        },
                        "blobsLength": {
                          "type": "integer"
                        },
                        "quorumNumbers": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "blobHeadersRoot": {
                          "type": "string"
                        },
                        "referenceBlockNumber": {
                          "type": "integer"
                        },
                        "signedStakeForQuorums": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "transactionHash": {
                          "type": "string"
                        },
                        "blockTimestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "blockNumber": {
                          "type": "integer"
                        },
                        "batchMetadata": {
                          "type": "object",
                          "properties": {
                            "apkG2": {
                              "type": "string"
                            },
                            "sigma": {
                              "type": "string"
                            },
                            "quorumApks": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "quorumApkIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerPubkeys": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "totalStakeIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerStakeIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerQuorumBitmapIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "operators": {
                          "type": "object",
                          "properties": {
                            "signers": {
                              "type": "string"
                            },
                            "nonSigners": {
                              "type": "string"
                            }
                          }
                        },
                        "signers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "nonSigners": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "quorumStakes": {
                          "type": "object",
                          "properties": {
                            "quorumNumber": {
                              "type": "string"
                            },
                            "stake": {
                              "type": "string"
                            }
                          }
                        },
                        "signatoryRecordHash": {
                          "type": "string"
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "logIndex": {
                                "type": "string"
                              },
                              "logTransactionHash": {
                                "type": "string"
                              },
                              "logTransactionIndex": {
                                "type": "string"
                              },
                              "logAddress": {
                                "type": "string"
                              },
                              "logData": {
                                "type": "string"
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "transactionHash": {
                                "type": "string"
                              },
                              "nonce": {
                                "type": "integer"
                              },
                              "index": {
                                "type": "integer"
                              },
                              "fromAddress": {
                                "type": "string"
                              },
                              "toAddress": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "gas": {
                                "type": "integer"
                              },
                              "gasPrice": {
                                "type": "string"
                              },
                              "receiptCumulativeGasUsed": {
                                "type": "integer"
                              },
                              "receiptGasUsed": {
                                "type": "integer"
                              },
                              "receiptStatus": {
                                "type": "string"
                              },
                              "effectiveGasPrice": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "block": {
                          "type": "object",
                          "properties": {
                            "blockNumber": {
                              "type": "integer"
                            },
                            "blockHash": {
                              "type": "string"
                            },
                            "parentHash": {
                              "type": "string"
                            },
                            "nonce": {
                              "type": "string"
                            },
                            "sha3Uncles": {
                              "type": "string"
                            },
                            "logsBloom": {
                              "type": "string"
                            },
                            "transactionsRoot": {
                              "type": "string"
                            },
                            "stateRoot": {
                              "type": "string"
                            },
                            "receiptsRoot": {
                              "type": "string"
                            },
                            "miner": {
                              "type": "string"
                            },
                            "difficulty": {
                              "type": "integer"
                            },
                            "totalDifficulty": {
                              "type": "integer"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "extraData": {
                              "type": "string"
                            },
                            "gasLimit": {
                              "type": "integer"
                            },
                            "gasUsed": {
                              "type": "integer"
                            },
                            "transactionCount": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "batchId": {
                          "type": "string"
                        },
                        "blockNumber": {
                          "type": "integer"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/batch-by-id": {
      "get": {
        "summary": "Batch Info by Id",
        "description": "Fetches detailed information about a batch, including metadata, logs, transactions, and block details.",
        "operationId": "getBatchDetails",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "batchId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "description": "The unique identifier for the batch."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched batch data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "batchId": {
                          "type": "string"
                        },
                        "batchHeaderHash": {
                          "type": "string"
                        },
                        "blobsLength": {
                          "type": "integer"
                        },
                        "quorumNumbers": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "blobHeadersRoot": {
                          "type": "string"
                        },
                        "referenceBlockNumber": {
                          "type": "integer"
                        },
                        "signedStakeForQuorums": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "transactionHash": {
                          "type": "string"
                        },
                        "blockTimestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "blockNumber": {
                          "type": "integer"
                        },
                        "batchMetadata": {
                          "type": "object",
                          "properties": {
                            "apkG2": {
                              "type": "string"
                            },
                            "sigma": {
                              "type": "string"
                            },
                            "quorumApks": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "quorumApkIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerPubkeys": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "totalStakeIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerStakeIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "nonSignerQuorumBitmapIndices": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "operators": {
                          "type": "object",
                          "properties": {
                            "signers": {
                              "type": "string"
                            },
                            "nonSigners": {
                              "type": "string"
                            }
                          }
                        },
                        "signers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "nonSigners": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "quorumStakes": {
                          "type": "object",
                          "properties": {
                            "quorumNumber": {
                              "type": "string"
                            },
                            "stake": {
                              "type": "string"
                            }
                          }
                        },
                        "signatoryRecordHash": {
                          "type": "string"
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "logIndex": {
                                "type": "string"
                              },
                              "logTransactionHash": {
                                "type": "string"
                              },
                              "logTransactionIndex": {
                                "type": "string"
                              },
                              "logAddress": {
                                "type": "string"
                              },
                              "logData": {
                                "type": "string"
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "transactionHash": {
                                "type": "string"
                              },
                              "nonce": {
                                "type": "integer"
                              },
                              "index": {
                                "type": "integer"
                              },
                              "fromAddress": {
                                "type": "string"
                              },
                              "toAddress": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "gas": {
                                "type": "integer"
                              },
                              "gasPrice": {
                                "type": "string"
                              },
                              "receiptCumulativeGasUsed": {
                                "type": "integer"
                              },
                              "receiptGasUsed": {
                                "type": "integer"
                              },
                              "receiptStatus": {
                                "type": "string"
                              },
                              "effectiveGasPrice": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "block": {
                          "type": "object",
                          "properties": {
                            "blockNumber": {
                              "type": "integer"
                            },
                            "blockHash": {
                              "type": "string"
                            },
                            "parentHash": {
                              "type": "string"
                            },
                            "nonce": {
                              "type": "string"
                            },
                            "sha3Uncles": {
                              "type": "string"
                            },
                            "logsBloom": {
                              "type": "string"
                            },
                            "transactionsRoot": {
                              "type": "string"
                            },
                            "stateRoot": {
                              "type": "string"
                            },
                            "receiptsRoot": {
                              "type": "string"
                            },
                            "miner": {
                              "type": "string"
                            },
                            "difficulty": {
                              "type": "integer"
                            },
                            "totalDifficulty": {
                              "type": "integer"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "extraData": {
                              "type": "string"
                            },
                            "gasLimit": {
                              "type": "integer"
                            },
                            "gasUsed": {
                              "type": "integer"
                            },
                            "transactionCount": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "batchId": {
                          "type": "string"
                        },
                        "blockNumber": {
                          "type": "integer"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/batch-nonsigners": {
      "get": {
        "summary": "Batch Non-Signers",
        "description": "Fetches all non-signers information of a given batch.",
        "operationId": "getNonSignersByBatchId",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "batchId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "description": "The ID of the batch for which non-signer information is being requested."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved non-signer data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "The unique ID of the operator."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The name or identifier of the operator."
                          },
                          "socket": {
                            "type": "string",
                            "description": "The socket associated with the operator."
                          },
                          "status": {
                            "type": "boolean",
                            "description": "The status of the operator (active/inactive)."
                          },
                          "ejected": {
                            "type": "boolean",
                            "description": "Whether the operator has been ejected from the batch."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of non-signers for the given batch."
                        },
                        "batchId": {
                          "type": "string",
                          "description": "The ID of the batch."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalNonSigners": {
                              "type": "integer",
                              "description": "Total number of non-signers."
                            },
                            "activeNonSigners": {
                              "type": "integer",
                              "description": "Number of active non-signers."
                            },
                            "inactiveNonSigners": {
                              "type": "integer",
                              "description": "Number of inactive non-signers."
                            },
                            "activePercentage": {
                              "type": "number",
                              "description": "Percentage of active non-signers."
                            },
                            "ejectedNonSigners": {
                              "type": "integer",
                              "description": "Number of ejected non-signers."
                            },
                            "ejectedPercentage": {
                              "type": "number",
                              "description": "Percentage of ejected non-signers."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/all-operators": {
      "get": {
        "summary": "All Operators",
        "description": "Retrieves a paginated list of operators along with their latest quorum stakes, metadata, and statistics about the operators.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "The page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            },
            "description": "The number of operators per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing operator data, metadata, and statistics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "The unique ID of the operator."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The operator's name or identifier."
                          },
                          "socket": {
                            "type": "string",
                            "description": "The socket associated with the operator."
                          },
                          "status": {
                            "type": "boolean",
                            "description": "The status of the operator (active or not)."
                          },
                          "ejected": {
                            "type": "boolean",
                            "description": "Indicates if the operator has been ejected."
                          },
                          "quorumStakes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quorumNumber": {
                                  "type": "string",
                                  "description": "The quorum number."
                                },
                                "stake": {
                                  "type": "string",
                                  "description": "The stake amount for the operator in the quorum."
                                }
                              }
                            },
                            "description": "An array of quorum stakes for the operator."
                          },
                          "totalStake": {
                            "type": "number",
                            "description": "The total stake of the operator across all quorums."
                          }
                        }
                      },
                      "description": "A list of operators with their respective details and quorum stakes."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of operators."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of operators per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages for the query."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if more pages are available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "The total number of operators in the system."
                            },
                            "activeOperators": {
                              "type": "integer",
                              "description": "The number of active operators."
                            },
                            "ejectedOperators": {
                              "type": "integer",
                              "description": "The number of ejected operators."
                            },
                            "totalStake": {
                              "type": "number",
                              "description": "The total stake across all operators."
                            },
                            "averageStake": {
                              "type": "number",
                              "description": "The average stake per operator."
                            }
                          },
                          "description": "Summary statistics about the operators and their stakes."
                        }
                      },
                      "description": "Metadata about the paginated response and additional statistics."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/operator-info": {
      "get": {
        "summary": "Operator Info",
        "description": "Retrieves detailed information for a specific operator, including quorum-related data and calculated statistics.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique address of the operator to fetch details for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing operator details and statistics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "operatorId": {
                          "type": "string",
                          "description": "The unique ID of the operator."
                        },
                        "operator": {
                          "type": "string",
                          "description": "The operator's name or identifier."
                        },
                        "socket": {
                          "type": "string",
                          "description": "The socket associated with the operator."
                        },
                        "status": {
                          "type": "boolean",
                          "description": "The status of the operator (active or not)."
                        },
                        "ejected": {
                          "type": "boolean",
                          "description": "Indicates if the operator has been ejected."
                        },
                        "blockNumber": {
                          "type": "integer",
                          "description": "The block number of the operator's latest state."
                        },
                        "quorums": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "quorumNumber": {
                                "type": "string",
                                "description": "The quorum number associated with the operator."
                              },
                              "operatorIndex": {
                                "type": "string",
                                "description": "The index of the operator in the quorum."
                              },
                              "stake": {
                                "type": "string",
                                "description": "The stake amount of the operator in the quorum."
                              },
                              "activeBatchIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of active batch IDs for the operator in the quorum."
                              },
                              "entryBatchIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of entry batch IDs for the operator in the quorum."
                              },
                              "exitBatchIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of exit batch IDs for the operator in the quorum."
                              },
                              "entryTimestamps": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "description": "List of entry timestamps for the operator in the quorum."
                              },
                              "exitTimestamps": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "description": "List of exit timestamps for the operator in the quorum."
                              }
                            }
                          },
                          "description": "A list of quorum-related details for the operator."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalQuorums": {
                              "type": "integer",
                              "description": "The total number of quorums the operator is part of."
                            },
                            "activeQuorums": {
                              "type": "integer",
                              "description": "The number of active quorums for the operator."
                            },
                            "totalStake": {
                              "type": "number",
                              "description": "The total stake of the operator across all quorums."
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Indicates if the operator is active and not ejected."
                            }
                          },
                          "description": "Calculated statistics about the operator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/operators-by-status": {
      "get": {
        "summary": "Operators by Status",
        "description": "Retrieves a list of operators filtered by their status, with pagination and aggregated statistics.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ],
              "default": true
            },
            "description": "The status of the operators to filter by."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "The page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            },
            "description": "The number of items per page for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing operators data with metadata and statistics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "The unique ID of the operator."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The operator's name or identifier."
                          },
                          "socket": {
                            "type": "string",
                            "description": "The socket associated with the operator."
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the operator."
                          },
                          "ejected": {
                            "type": "boolean",
                            "description": "Indicates if the operator has been ejected."
                          },
                          "quorumStakes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quorumNumber": {
                                  "type": "string",
                                  "description": "The quorum number associated with the operator."
                                },
                                "stake": {
                                  "type": "string",
                                  "description": "The stake amount of the operator in the quorum."
                                }
                              }
                            },
                            "description": "A list of quorum-related stakes for the operator."
                          },
                          "totalStake": {
                            "type": "number",
                            "description": "The total stake of the operator across all quorums."
                          }
                        }
                      },
                      "description": "The list of operators matching the query parameters."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of operators matching the status."
                        },
                        "status": {
                          "type": "string",
                          "description": "The status filter applied to the operators."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages available."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if there are more pages available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "The total number of operators."
                            },
                            "totalStake": {
                              "type": "number",
                              "description": "The total stake across all operators."
                            },
                            "averageStake": {
                              "type": "number",
                              "description": "The average stake per operator."
                            }
                          },
                          "description": "Aggregated statistics for the operators."
                        }
                      },
                      "description": "Metadata and statistics about the query result."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/operators-by-ejection": {
      "get": {
        "summary": "Operators by Ejection",
        "description": "Retrieves a list of operators filtered by their ejection status, with pagination and aggregated statistics.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "ejected",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ],
              "default": true
            },
            "description": "The ejection status of the operators to filter by. `true` for ejected operators, `false` for non-ejected."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "The page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            },
            "description": "The number of items per page for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing operators data with metadata and statistics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "The unique ID of the operator."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The operator's name or identifier."
                          },
                          "socket": {
                            "type": "string",
                            "description": "The socket associated with the operator."
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the operator."
                          },
                          "ejected": {
                            "type": "boolean",
                            "description": "Indicates if the operator has been ejected."
                          },
                          "quorumStakes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quorumNumber": {
                                  "type": "string",
                                  "description": "The quorum number associated with the operator."
                                },
                                "stake": {
                                  "type": "string",
                                  "description": "The stake amount of the operator in the quorum."
                                }
                              }
                            },
                            "description": "A list of quorum-related stakes for the operator."
                          },
                          "totalStake": {
                            "type": "number",
                            "description": "The total stake of the operator across all quorums."
                          }
                        }
                      },
                      "description": "The list of operators matching the query parameters."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of operators matching the ejection status."
                        },
                        "status": {
                          "type": "boolean",
                          "description": "The ejection status filter applied to the operators."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages available."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if there are more pages available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "The total number of operators."
                            },
                            "totalStake": {
                              "type": "number",
                              "description": "The total stake across all operators."
                            },
                            "averageStake": {
                              "type": "number",
                              "description": "The average stake per operator."
                            }
                          },
                          "description": "Aggregated statistics for the operators."
                        }
                      },
                      "description": "Metadata and statistics about the query result."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/operator-nonsignings": {
      "get": {
        "summary": "Operator Non-Signings",
        "description": "Fetches distinct non-signed batch IDs associated with a specific operator, filtered by optional time and block ranges, with pagination.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique address of the operator to filter batches for."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "The page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            },
            "description": "The number of items per page for pagination."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The start timestamp for filtering batches."
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The end timestamp for filtering batches."
          },
          {
            "name": "startBlock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The starting block number for filtering batches."
          },
          {
            "name": "endBlock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The ending block number for filtering batches."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing distinct batch data with metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "batchId": {
                            "type": "string",
                            "description": "The unique ID of the batch."
                          },
                          "blockTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp when the block was created."
                          },
                          "blockNumber": {
                            "type": "integer",
                            "description": "The block number associated with the batch."
                          }
                        }
                      },
                      "description": "The list of distinct batches matching the query parameters."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of distinct batches matching the filters."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "operatorId": {
                          "type": "string",
                          "description": "The operator ID filter applied to the query."
                        },
                        "timeRange": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The earliest timestamp in the result set."
                            },
                            "end": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The latest timestamp in the result set."
                            }
                          },
                          "description": "The range of timestamps covered in the result set."
                        },
                        "blockRange": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer",
                              "description": "The lowest block number in the result set."
                            },
                            "end": {
                              "type": "integer",
                              "description": "The highest block number in the result set."
                            }
                          },
                          "description": "The range of block numbers covered in the result set."
                        },
                        "filters": {
                          "type": "object",
                          "properties": {
                            "startTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The start timestamp filter applied."
                            },
                            "endTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The end timestamp filter applied."
                            },
                            "startBlock": {
                              "type": "integer",
                              "description": "The starting block filter applied."
                            },
                            "endBlock": {
                              "type": "integer",
                              "description": "The ending block filter applied."
                            }
                          },
                          "description": "The filters applied to the query."
                        }
                      },
                      "description": "Metadata about the query result and applied filters."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/operator-with-issues": {
      "get": {
        "summary": "Operators with Issues",
        "description": "Retrieves a list of operators who have been non-signers with optional time and block-based filtering",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Start time for filtering non-signing events"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "End time for filtering non-signing events"
          },
          {
            "name": "startBlock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Starting block number for filtering non-signing events"
          },
          {
            "name": "endBlock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Ending block number for filtering non-signing events"
          },
          {
            "name": "lastNBatches",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "10"
            },
            "description": "Number of most recent batches to retrieve if no other filters are applied"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with non-signing operators data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "Unique identifier for the operator"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Operator name or address"
                          },
                          "socket": {
                            "type": "string",
                            "description": "Socket information for the operator"
                          },
                          "missedBatchCount": {
                            "type": "integer",
                            "description": "Number of batches missed by the operator"
                          },
                          "missedBatches": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of missed batch IDs"
                          },
                          "firstMissedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp of the first missed batch"
                          },
                          "lastMissedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp of the last missed batch"
                          },
                          "firstMissedBlock": {
                            "type": "integer",
                            "description": "First block number where a batch was missed"
                          },
                          "lastMissedBlock": {
                            "type": "integer",
                            "description": "Last block number where a batch was missed"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of non-signing operators"
                        },
                        "timeRange": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "end": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "blockRange": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "integer"
                            },
                            "end": {
                              "type": "integer"
                            }
                          }
                        },
                        "filteredBatchCount": {
                          "type": "integer",
                          "description": "Number of batches considered in the query"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "Total number of operators with missed batches"
                            },
                            "totalMissedBatches": {
                              "type": "integer",
                              "description": "Total number of missed batches"
                            },
                            "averageMissedBatchesPerOperator": {
                              "type": "number",
                              "description": "Average number of missed batches per operator"
                            },
                            "mostMissedBatches": {
                              "type": "integer",
                              "description": "Highest number of missed batches by a single operator"
                            },
                            "leastMissedBatches": {
                              "type": "integer",
                              "description": "Lowest number of missed batches by a single operator"
                            }
                          }
                        },
                        "filters": {
                          "type": "object",
                          "properties": {
                            "startTime": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "endTime": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "startBlock": {
                              "type": "integer"
                            },
                            "endBlock": {
                              "type": "integer"
                            },
                            "lastNBatches": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/operator-activity": {
      "get": {
        "summary": "Operator Activities",
        "operationId": "getOperatorActivities",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique address of the operator."
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Registered",
                "Deregistered",
                "StakeUpdated",
                "Ejected",
                "SocketUpdated"
              ],
              "default": "Registered"
            },
            "description": "A specific action type to filter activities."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1",
              "description": "Page number for pagination."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "20",
              "description": "Number of records per page."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with operator activity data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "The operator's unique identifier."
                          },
                          "quorumNumber": {
                            "type": "string",
                            "description": "The quorum number associated with the action."
                          },
                          "action": {
                            "type": "string",
                            "description": "The action performed by the operator."
                          },
                          "stake": {
                            "type": "string",
                            "description": "The stake of operator in the quorum."
                          },
                          "batchId": {
                            "type": "string",
                            "description": "The batch identifier associated with the action."
                          },
                          "transactionHash": {
                            "type": "string",
                            "description": "The transaction hash of the action."
                          },
                          "blockTimestamp": {
                            "type": "string",
                            "description": "The timestamp of the block in which the action occurred."
                          },
                          "blockNumber": {
                            "type": "integer",
                            "description": "The block number in which the action occurred."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of activities matching the filters."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of records per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages based on the provided limit."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates whether there are more results available on the next page."
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "integer",
                        "description": "The count of activities per action type."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/all-quorums": {
      "get": {
        "summary": "All Quorums",
        "description": "Retrieves the latest information about all quorums with pagination and metadata, including statistics.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "description": "The page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "required": false,
            "description": "The number of results to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing quorums data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "quorumNumber": {
                            "type": "integer",
                            "description": "The unique number of the quorum."
                          },
                          "strategiesCount": {
                            "type": "integer",
                            "description": "The count of strategies for the quorum."
                          },
                          "minimumStake": {
                            "type": "number",
                            "description": "The minimum stake required for the quorum."
                          },
                          "createdAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "integer",
                                "description": "The block number when the quorum was created."
                              },
                              "blockTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The block timestamp of quorum creation."
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash of quorum creation."
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "integer",
                                "description": "The block number when the quorum was last updated."
                              },
                              "blockTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The block timestamp of the last update."
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash of the last update."
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of quorums."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of results per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether there are more results beyond the current page."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalQuorums": {
                              "type": "integer",
                              "description": "The total number of quorums retrieved."
                            },
                            "averageStrategiesPerQuorum": {
                              "type": "number",
                              "description": "The average number of strategies per quorum."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/quorum-info": {
      "get": {
        "summary": "Quorum Info",
        "description": "Retrieves detailed information about a specific quorum, including strategies, stake, and member counts.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "quorumNumber",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique number of the quorum to retrieve details for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing quorum details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "quorumNumber": {
                      "type": "integer",
                      "description": "The unique number of the quorum."
                    },
                    "strategies": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strategies associated with the quorum."
                    },
                    "minimumStake": {
                      "type": "number",
                      "description": "The minimum stake required for the quorum."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the quorum was created."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of the last update to the quorum."
                    },
                    "registeredMembersCount": {
                      "type": "integer",
                      "description": "The total number of registered members in the quorum."
                    },
                    "activeMembersCount": {
                      "type": "integer",
                      "description": "The total number of active members in the quorum."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/quorum-operators": {
      "get": {
        "summary": "Quorum Operators",
        "description": "Retrieves a paginated list of operators in a specified quorum, along with metadata and additional statistics.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "quorumNumber",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique number of the quorum to retrieve operators for."
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false"
            },
            "required": false,
            "description": "Filter to include only active operators (stake > 0) if set to `true`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false,
            "description": "The page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            },
            "required": false,
            "description": "The number of operators per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing operators and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "The unique identifier of the operator."
                          },
                          "stake": {
                            "type": "string",
                            "description": "The stake amount of the operator."
                          }
                        }
                      },
                      "description": "A list of operators for the requested quorum and page."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of operators for the quorum."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of operators per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if there are more pages to retrieve."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "The total number of operators in the quorum."
                            },
                            "currentPageActiveOperators": {
                              "type": "integer",
                              "description": "The number of active operators on the current page."
                            },
                            "currentPageTotalStake": {
                              "type": "number",
                              "description": "The total stake of operators on the current page."
                            },
                            "currentPageAverageStake": {
                              "type": "number",
                              "description": "The average stake of operators on the current page."
                            }
                          },
                          "description": "Additional statistics for the current page."
                        }
                      },
                      "description": "Metadata about the paginated response."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenda/quorum-activity": {
      "get": {
        "summary": "Quorum Activities",
        "description": "Retrieves a paginated list of operator activities for a specified quorum, filtered by optional parameters such as `operatorId` and `action`. The response also includes metadata and a summary of actions.",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "holesky"
              ],
              "default": "holesky"
            },
            "required": true,
            "description": "Select the network you want to track."
          },
          {
            "name": "quorumNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique quorum number for which activities are retrieved."
          },
          {
            "name": "operator",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The address of a specific operator to filter activities."
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Registered",
                "Deregistered",
                "StakeUpdated",
                "Ejected"
              ],
              "default": "Registered"
            },
            "description": "A specific action type to filter activities."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "The page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1
            },
            "description": "The number of activities per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing operator activities, metadata, and a summary.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operatorId": {
                            "type": "string",
                            "description": "The unique ID of the operator."
                          },
                          "quorumNumber": {
                            "type": "string",
                            "description": "The unique number of the quorum."
                          },
                          "action": {
                            "type": "string",
                            "description": "The type of action performed by the operator."
                          },
                          "stake": {
                            "type": "string",
                            "description": "The stake of operator in the quorum."
                          },
                          "batchId": {
                            "type": "string",
                            "description": "The batch ID associated with the action."
                          },
                          "transactionHash": {
                            "type": "string",
                            "description": "The transaction hash for the activity."
                          },
                          "blockTimestamp": {
                            "type": "string",
                            "description": "The timestamp of the block when the action occurred."
                          },
                          "blockNumber": {
                            "type": "integer",
                            "description": "The block number associated with the action."
                          }
                        }
                      },
                      "description": "A list of operator activities for the given quorum."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of activities for the query."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of activities per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages for the query."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if more pages are available."
                        }
                      },
                      "description": "Metadata about the paginated response."
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "actionCounts": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "integer"
                          },
                          "description": "A summary of action types and their respective counts."
                        },
                        "uniqueOperators": {
                          "type": "integer",
                          "description": "The number of unique operators involved in the activities."
                        }
                      },
                      "description": "Summary information about the queried activities."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-avs": {
      "get": {
        "summary": "All AVS",
        "description": "Fetches paginated AVS details, including operator counts and associated metadata.",
        "operationId": "getAvsDetails",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination (default is 1)."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page (default is 12)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with AVS data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "avs": {
                            "type": "string",
                            "description": "The unique identifier for the AVS."
                          },
                          "metadataURI": {
                            "type": "string",
                            "description": "The URI for associated metadata."
                          },
                          "operatorCount": {
                            "type": "integer",
                            "description": "The number of operators in the AVS."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the metadata."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the metadata."
                          },
                          "logo": {
                            "type": "string",
                            "description": "The logo associated with the metadata."
                          },
                          "website": {
                            "type": "string",
                            "description": "The website associated with the metadata."
                          },
                          "telegram": {
                            "type": "string",
                            "description": "The Telegram link for the metadata."
                          },
                          "discord": {
                            "type": "string",
                            "description": "The Discord link for the metadata."
                          },
                          "x": {
                            "type": "string",
                            "description": "Additional metadata information."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of AVS entries."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether there are more pages available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalAVS": {
                              "type": "integer",
                              "description": "Total number of AVS entries."
                            },
                            "totalOperators": {
                              "type": "integer",
                              "description": "Total number of operators across all AVS entries."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-info": {
      "get": {
        "summary": "AVS Info",
        "description": "Fetches AVS details along with metadata and operator statistics.",
        "operationId": "getAvsDetails",
        "parameters": [
          {
            "name": "avs",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The AVS identifier to fetch details for."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AVS details fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "avsDetails": {
                          "type": "object",
                          "properties": {
                            "avs": {
                              "type": "string",
                              "description": "The AVS address."
                            },
                            "metadataURI": {
                              "type": "string",
                              "description": "The metadata URI for the AVS."
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            },
                            "website": {
                              "type": "string"
                            },
                            "telegram": {
                              "type": "string"
                            },
                            "discord": {
                              "type": "string"
                            },
                            "x": {
                              "type": "string"
                            }
                          }
                        },
                        "operatorStats": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "The total number of operators associated with the AVS."
                            },
                            "strategySummary": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "strategy": {
                                    "type": "string",
                                    "description": "The strategy identifier."
                                  },
                                  "shares": {
                                    "type": "string",
                                    "description": "The total shares allocated to the strategy."
                                  },
                                  "tokens": {
                                    "type": "string",
                                    "description": "The calculated tokens based on shares and decimals."
                                  },
                                  "tvl": {
                                    "type": "string",
                                    "description": "The total value locked calculated based on token price and shares."
                                  },
                                  "tokenDetails": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      },
                                      "sharesUnderlying": {
                                        "type": "string"
                                      },
                                      "dollarPrice": {
                                        "type": "string"
                                      },
                                      "decimals": {
                                        "type": "string"
                                      },
                                      "ethprice": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-activity": {
      "get": {
        "summary": "AVS Activity",
        "description": "Fetches paginated AVS activity details, including metadata and statistics.",
        "operationId": "getAvsActivities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination (default is 1)."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page (default is 12)."
            }
          },
          {
            "name": "avs",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The AVS identifier to filter activities."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with AVS activity data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string",
                            "description": "The action performed in the activity."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The operator involved in the activity."
                          },
                          "staker": {
                            "type": "string",
                            "description": "The staker involved in the activity."
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The strategy associated with the activity."
                          },
                          "token": {
                            "type": "string",
                            "description": "The token involved in the activity."
                          },
                          "avs": {
                            "type": "string",
                            "description": "The AVS identifier associated with the activity."
                          },
                          "pod": {
                            "type": "string",
                            "description": "The pod associated with the activity."
                          },
                          "data": {
                            "type": "object",
                            "description": "Additional data for the activity."
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Metadata associated with the activity."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of activities."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether there are more pages available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalActivities": {
                              "type": "integer",
                              "description": "Total number of activities."
                            },
                            "uniqueActions": {
                              "type": "integer",
                              "description": "Number of unique actions across all activities."
                            },
                            "uniqueStakers": {
                              "type": "integer",
                              "description": "Number of unique stakers across all activities."
                            },
                            "uniquePods": {
                              "type": "integer",
                              "description": "Number of unique pods across all activities."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-apy": {
      "get": {
        "summary": "AVS APY",
        "description": "Fetches APY (Annual Percentage Yield) data for the specified AVS.",
        "parameters": [
          {
            "name": "avs",
            "in": "query",
            "description": "The AVS address for which APY data is requested.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "APY calculation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avsAddress": {
                      "type": "string",
                      "description": "The AVS address provided."
                    },
                    "apy": {
                      "type": "number",
                      "description": "The total APY for the AVS address."
                    },
                    "strategyApys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "The strategy address."
                          },
                          "strategyTvl": {
                            "type": "number",
                            "description": "The total value locked (TVL) for the strategy in ETH."
                          },
                          "totalApy": {
                            "type": "number",
                            "description": "The total APY for the strategy."
                          },
                          "tokenApys": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "token": {
                                  "type": "string",
                                  "description": "The token address."
                                },
                                "apy": {
                                  "type": "number",
                                  "description": "The APY for the specific token."
                                },
                                "duration": {
                                  "type": "integer",
                                  "description": "The duration in seconds for which rewards are calculated."
                                },
                                "rewardInEth": {
                                  "type": "number",
                                  "description": "The rewards in ETH for the specific token."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-rewards": {
      "get": {
        "summary": "AVS Rewards",
        "description": "Fetches paginated rewards history of an AVS along with metadata and global statistics.",
        "operationId": "getRewardsHistory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page for pagination. Defaults to 12."
            }
          },
          {
            "name": "avs",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The AVS value to filter by."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing rewards data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "avs": {
                            "type": "string"
                          },
                          "submitter": {
                            "type": "string"
                          },
                          "tokenHopper": {
                            "type": "string"
                          },
                          "submissionNonce": {
                            "type": "string"
                          },
                          "rewardsSubmissionHash": {
                            "type": "string"
                          },
                          "strategies": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "startTimestamp": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "duration": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalRewards": {
                              "type": "integer"
                            },
                            "totalAmount": {
                              "type": "number"
                            },
                            "uniqueTokens": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/avs-operators": {
      "get": {
        "summary": "AVS Operators",
        "description": "Returns a paginated list of operators for a specified AVS address, including metadata details for each operator.",
        "parameters": [
          {
            "name": "avs",
            "in": "query",
            "required": true,
            "description": "The AVS address to fetch operators for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number for pagination (default is 1).",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of results per page (default is 12).",
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operators fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "operators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string",
                                "description": "The operator address."
                              },
                              "metadataURI": {
                                "type": "string",
                                "description": "The URI for operator metadata."
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the operator."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "A description of the operator."
                                  },
                                  "logo": {
                                    "type": "string",
                                    "description": "The logo URL of the operator."
                                  },
                                  "website": {
                                    "type": "string",
                                    "description": "The website URL of the operator."
                                  },
                                  "telegram": {
                                    "type": "string",
                                    "description": "The Telegram link for the operator."
                                  },
                                  "discord": {
                                    "type": "string",
                                    "description": "The Discord link for the operator."
                                  },
                                  "x": {
                                    "type": "string",
                                    "description": "Additional metadata for the operator."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer",
                              "description": "The current page number."
                            },
                            "limit": {
                              "type": "integer",
                              "description": "The number of results per page."
                            },
                            "totalPages": {
                              "type": "integer",
                              "description": "The total number of pages available."
                            },
                            "hasMore": {
                              "type": "boolean",
                              "description": "Indicates if there are more results available."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-deposits": {
      "get": {
        "summary": "All Deposits",
        "description": "Returns a paginated list of all deposits filtered by optional parameters such as staker, strategy, and token, with metadata.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number for pagination (default is 1).",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of results per page (default is 12).",
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "staker",
            "in": "query",
            "required": false,
            "description": "Filter by staker address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "required": false,
            "description": "Filter by strategy.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "description": "Filter by token.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activities fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string",
                            "description": "The action performed."
                          },
                          "staker": {
                            "type": "string",
                            "description": "The staker address."
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The strategy identifier."
                          },
                          "token": {
                            "type": "string",
                            "description": "The token address."
                          },
                          "data": {
                            "type": "object",
                            "description": "Additional data as JSON."
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Metadata about the activity."
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp of the activity."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of activities."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of results per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if there are more results available."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/distribution-root-info": {
      "get": {
        "summary": "Distribution Root Info",
        "description": "Fetches the distribution root details for the specified rootIndex.",
        "operationId": "getDistributionRootDetails",
        "parameters": [
          {
            "name": "rootIndex",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The rootIndex of the distribution root to fetch details for."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with distribution root details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rootIndex": {
                      "type": "string",
                      "description": "The unique identifier for the distribution root."
                    },
                    "root": {
                      "type": "string",
                      "description": "The root value of the distribution."
                    },
                    "rewardsCalculationEndTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the rewards calculation ends."
                    },
                    "activatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the distribution root was activated."
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Indicates whether the distribution root is active."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the distribution root was last updated."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the distribution root was created."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-operators": {
      "get": {
        "summary": "All Operators",
        "description": "Fetches the latest operator details with metadata and associated statistics.",
        "operationId": "getLatestOperatorDetails",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination (default is 1)."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page (default is 12)."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with operator data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operator": {
                            "type": "string",
                            "description": "The unique identifier for the operator."
                          },
                          "metadataURI": {
                            "type": "string",
                            "description": "The metadata URI associated with the operator."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the operator."
                          },
                          "logo": {
                            "type": "string",
                            "description": "The logo URL of the operator."
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of the latest operator data."
                          },
                          "avsCount": {
                            "type": "integer",
                            "description": "The count of AVSs associated with the operator."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of operators."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages available."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if more pages are available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "The total number of operators."
                            },
                            "totalAVSs": {
                              "type": "integer",
                              "description": "The total number of AVSs across all operators."
                            },
                            "totalStakers": {
                              "type": "integer",
                              "description": "The total number of stakers across all operators."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/operator-info": {
      "get": {
        "summary": "Operator Info",
        "description": "Retrieves detailed information about a specific operator, including metadata, statistics, and strategies.",
        "operationId": "getOperatorDetails",
        "parameters": [
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The address of the operator."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with operator details, strategies, and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "operatorDetails": {
                          "type": "object",
                          "properties": {
                            "operator": {
                              "type": "string"
                            },
                            "metadataURI": {
                              "type": "string"
                            },
                            "details": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "operatorStats": {
                          "type": "object",
                          "properties": {
                            "avs": {
                              "type": "number"
                            },
                            "stakersCount": {
                              "type": "integer"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "strategies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "strategy": {
                                    "type": "string"
                                  },
                                  "shares": {
                                    "type": "string"
                                  },
                                  "token": {
                                    "type": "string"
                                  },
                                  "tvl": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "sharesUnderlying": {
                                    "type": "number"
                                  },
                                  "dollarPrice": {
                                    "type": "number"
                                  },
                                  "ethPrice": {
                                    "type": "number"
                                  },
                                  "decimals": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "metadataURI": {
                              "type": "string"
                            },
                            "synced": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            },
                            "website": {
                              "type": "string"
                            },
                            "telegram": {
                              "type": "string"
                            },
                            "discord": {
                              "type": "string"
                            },
                            "x": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/operator-activity": {
      "get": {
        "summary": "Operator Activity",
        "description": "Retrieves paginated activities for a specific operator, including global statistics and metadata.",
        "operationId": "getActivities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page for pagination. Defaults to 12."
            }
          },
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the operator."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with activities data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string",
                            "description": "The action performed."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The operator identifier."
                          },
                          "staker": {
                            "type": "string",
                            "description": "The staker identifier."
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The strategy associated with the action."
                          },
                          "token": {
                            "type": "string",
                            "description": "The token involved in the action."
                          },
                          "avs": {
                            "type": "string",
                            "description": "The AVS associated with the action."
                          },
                          "pod": {
                            "type": "string",
                            "description": "The pod associated with the action."
                          },
                          "data": {
                            "type": "object",
                            "description": "Additional data for the action."
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Additional metadata for the action."
                          },
                          "activity_timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp of the activity."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of activities."
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether more pages are available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalActivities": {
                              "type": "integer",
                              "description": "Total number of activities."
                            },
                            "uniqueActions": {
                              "type": "integer",
                              "description": "Number of unique actions performed."
                            },
                            "uniqueStakers": {
                              "type": "integer",
                              "description": "Number of unique stakers."
                            },
                            "uniquePods": {
                              "type": "integer",
                              "description": "Number of unique pods."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/operator-historical": {
      "get": {
        "summary": "Operator Historical",
        "description": "Retrieves paginated operator statistics for a specific operator, including global metadata.",
        "operationId": "getOperatorStats",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page for pagination. Defaults to 12."
            }
          },
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the operator."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with operator statistics data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operator": {
                            "type": "string",
                            "description": "The operator identifier."
                          },
                          "avs": {
                            "type": "string",
                            "description": "The AVS associated with the operator."
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of records."
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether more pages are available."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/operator-strategies": {
      "get": {
        "summary": "Operator Strategies",
        "description": "Returns the TVL for a specific operator, including details for each strategy and total stakers.",
        "parameters": [
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "description": "The operator address to fetch TVL for.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operator TVL details fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operator": {
                      "type": "string",
                      "description": "The operator address."
                    },
                    "totalStakers": {
                      "type": "integer",
                      "description": "The total number of stakers for the operator."
                    },
                    "strategiesTVL": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "The strategy identifier."
                          },
                          "totalShares": {
                            "type": "string",
                            "description": "The total shares allocated to the strategy."
                          },
                          "tokens": {
                            "type": "string",
                            "description": "The calculated tokens based on shares and decimals."
                          },
                          "tvl": {
                            "type": "string",
                            "description": "The total value locked calculated based on token price and shares."
                          },
                          "tokenDetails": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The token name."
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The token symbol."
                              },
                              "sharesUnderlying": {
                                "type": "string",
                                "description": "The underlying shares of the token."
                              },
                              "dollarPrice": {
                                "type": "string",
                                "description": "The dollar price of the token."
                              },
                              "decimals": {
                                "type": "string",
                                "description": "The decimals of the token."
                              },
                              "ethPrice": {
                                "type": "string",
                                "description": "The ETH price of the token."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/operators-tvl": {
      "get": {
        "summary": "Operators TVL",
        "description": "Returns a paginated list of strategies for all operators, along with metadata and global statistics.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number for pagination (default is 1).",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of items per page (default is 12).",
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operator": {
                            "type": "string",
                            "description": "Operator address"
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategy": {
                                  "type": "string",
                                  "description": "Strategy identifier"
                                },
                                "totalShares": {
                                  "type": "string",
                                  "description": "Total shares for the strategy"
                                },
                                "uniqueStakers": {
                                  "type": "integer",
                                  "description": "Number of unique stakers"
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Token address"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Token name"
                                },
                                "symbol": {
                                  "type": "string",
                                  "description": "Token symbol"
                                },
                                "sharesUnderlying": {
                                  "type": "string",
                                  "description": "Shares underlying the token"
                                },
                                "dollarPrice": {
                                  "type": "string",
                                  "description": "Token price in USD"
                                },
                                "ethPrice": {
                                  "type": "string",
                                  "description": "Token price in ETH"
                                },
                                "tokens": {
                                  "type": "string",
                                  "description": "Calculated number of tokens"
                                },
                                "tvl": {
                                  "type": "string",
                                  "description": "Total value locked for the strategy"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of operators"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of items per page"
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages"
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if there are more pages available"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalOperators": {
                              "type": "integer",
                              "description": "Total number of operators"
                            },
                            "totalStrategies": {
                              "type": "integer",
                              "description": "Total number of strategies"
                            },
                            "totalUniqueStakers": {
                              "type": "integer",
                              "description": "Total number of unique stakers across all operators"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/operator-avs": {
      "get": {
        "summary": "Operator AVS",
        "description": "Returns a paginated list of AVS metadata for a specified operator address, including detailed metadata and pagination info.",
        "parameters": [
          {
            "name": "operator",
            "in": "query",
            "required": true,
            "description": "The operator address to fetch AVS metadata for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number for pagination (default is 1).",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of results per page (default is 12).",
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AVS metadata fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "avs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "avsAddress": {
                                "type": "string",
                                "description": "The AVS address."
                              },
                              "metadataURI": {
                                "type": "string",
                                "description": "The URI for AVS metadata."
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the AVS."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "A description of the AVS."
                                  },
                                  "logo": {
                                    "type": "string",
                                    "description": "The logo URL of the AVS."
                                  },
                                  "website": {
                                    "type": "string",
                                    "description": "The website URL of the AVS."
                                  },
                                  "telegram": {
                                    "type": "string",
                                    "description": "The Telegram link for the AVS."
                                  },
                                  "discord": {
                                    "type": "string",
                                    "description": "The Discord link for the AVS."
                                  },
                                  "x": {
                                    "type": "string",
                                    "description": "Additional metadata for the AVS."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer",
                              "description": "The current page number."
                            },
                            "limit": {
                              "type": "integer",
                              "description": "The number of results per page."
                            },
                            "totalPages": {
                              "type": "integer",
                              "description": "The total number of pages available."
                            },
                            "hasMore": {
                              "type": "boolean",
                              "description": "Indicates if there are more results available."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-pods": {
      "get": {
        "summary": "All Pods",
        "description": "Fetches paginated data of pods and their metadata along with global statistics.",
        "operationId": "getPods",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page for pagination. Defaults to 12."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing pod data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pod": {
                            "type": "string",
                            "description": "The identifier of the pod."
                          },
                          "staker": {
                            "type": "string",
                            "description": "The staker associated with the pod."
                          },
                          "updatedAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string",
                                "description": "The block number of the last update."
                              },
                              "blockTimestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of the last update."
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash of the last update."
                              }
                            }
                          },
                          "blockNumber": {
                            "type": "integer",
                            "description": "The block number associated with the pod."
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp associated with the pod."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of pods."
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if more pages are available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalPods": {
                              "type": "integer",
                              "description": "Total number of pods globally."
                            },
                            "uniqueStakers": {
                              "type": "integer",
                              "description": "Total number of unique stakers globally."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/pod-info": {
      "get": {
        "summary": "Pod Info",
        "description": "Fetches the latest details of a pod or a staker's associated pod and shares.",
        "operationId": "getPodDetails",
        "parameters": [
          {
            "name": "pod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the pod."
            }
          },
          {
            "name": "staker",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The address of the staker associated with the pod."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing pod details and associated staker shares.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "pod": {
                          "type": "string",
                          "description": "The identifier of the pod."
                        },
                        "staker": {
                          "type": "string",
                          "description": "The staker associated with the pod."
                        },
                        "strategy": {
                          "type": "string",
                          "description": "The strategy used by the staker."
                        },
                        "amount": {
                          "type": "string",
                          "description": "The amount of shares held by the staker."
                        },
                        "updatedAt": {
                          "type": "object",
                          "properties": {
                            "blockNumber": {
                              "type": "string",
                              "description": "The block number of the last update."
                            },
                            "blockTimestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of the last update."
                            },
                            "transactionHash": {
                              "type": "string",
                              "description": "The transaction hash of the last update."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/pod-activity": {
      "get": {
        "summary": "Pod Activity",
        "description": "Fetches paginated activities for a specific pod along with global statistics.",
        "operationId": "getActivities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page for pagination. Defaults to 12."
            }
          },
          {
            "name": "pod",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the pod."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing activity data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string",
                            "description": "The action performed in the activity."
                          },
                          "operator": {
                            "type": "string",
                            "description": "The operator involved in the activity."
                          },
                          "staker": {
                            "type": "string",
                            "description": "The staker associated with the activity."
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The strategy involved in the activity."
                          },
                          "token": {
                            "type": "string",
                            "description": "The token involved in the activity."
                          },
                          "avs": {
                            "type": "string",
                            "description": "Additional value or state associated with the activity."
                          },
                          "pod": {
                            "type": "string",
                            "description": "The pod related to the activity."
                          },
                          "data": {
                            "type": "object",
                            "description": "Additional data related to the activity."
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Metadata of the activity."
                          },
                          "activity_timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of the activity."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of activities."
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if more pages are available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalActivities": {
                              "type": "integer",
                              "description": "Total number of activities globally."
                            },
                            "uniqueActions": {
                              "type": "integer",
                              "description": "Total number of unique actions globally."
                            },
                            "uniqueStakers": {
                              "type": "integer",
                              "description": "Total number of unique stakers globally."
                            },
                            "uniquePods": {
                              "type": "integer",
                              "description": "Total number of unique pods globally."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/pod-historical": {
      "get": {
        "summary": "Pod Historical",
        "description": "Fetches paginated shares history for a specific pod along with metadata.",
        "operationId": "getPodSharesHistory",
        "parameters": [
          {
            "name": "pod",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the pod."
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "description": "The number of items per page for pagination. Defaults to 50."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing shares history and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "staker": {
                      "type": "string",
                      "description": "The staker associated with the pod."
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The strategy used by the staker."
                    },
                    "token": {
                      "type": "string",
                      "description": "The token associated with the shares."
                    },
                    "history": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "shares": {
                            "type": "string",
                            "description": "The amount of shares held by the staker."
                          },
                          "blockNumber": {
                            "type": "string",
                            "description": "The block number of the update."
                          },
                          "blockTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of the update."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of shares entries."
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of items per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if more pages are available."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-rewards": {
      "get": {
        "summary": "All Rewards",
        "description": "Fetches paginated rewards history with optional filtering by type, AVS, submitter, and token, along with metadata and global statistics.",
        "operationId": "getRewardsHistory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page for pagination. Defaults to 12."
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The type of reward to filter by."
            }
          },
          {
            "name": "avs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The AVS value to filter by."
            }
          },
          {
            "name": "submitter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The submitter to filter by."
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The token to filter by."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing rewards data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "avs": {
                            "type": "string"
                          },
                          "submitter": {
                            "type": "string"
                          },
                          "tokenHopper": {
                            "type": "string"
                          },
                          "submissionNonce": {
                            "type": "string"
                          },
                          "rewardsSubmissionHash": {
                            "type": "string"
                          },
                          "strategies": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "startTimestamp": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "duration": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalRewards": {
                              "type": "integer"
                            },
                            "totalAmount": {
                              "type": "number"
                            },
                            "uniqueTokens": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/reward-info": {
      "get": {
        "summary": "Reward Info",
        "description": "Fetches the most recent reward details based on the provided rewardsSubmissionHash.",
        "operationId": "getRewardDetails",
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique rewardsSubmissionHash of the reward to fetch."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing the reward details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the reward."
                    },
                    "avs": {
                      "type": "string",
                      "description": "The AVS of the reward."
                    },
                    "submitter": {
                      "type": "string",
                      "description": "The submitter of the reward."
                    },
                    "tokenHopper": {
                      "type": "string",
                      "description": "The token hopper associated with the reward."
                    },
                    "submissionNonce": {
                      "type": "string",
                      "description": "The submission nonce for the reward."
                    },
                    "rewardsSubmissionHash": {
                      "type": "string",
                      "description": "The unique hash for the reward submission."
                    },
                    "strategies": {
                      "type": "string",
                      "description": "The strategies associated with the reward."
                    },
                    "token": {
                      "type": "string",
                      "description": "The token associated with the reward."
                    },
                    "amount": {
                      "type": "string",
                      "description": "The amount of the reward."
                    },
                    "startTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start timestamp of the reward."
                    },
                    "duration": {
                      "type": "string",
                      "description": "The duration of the reward."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last updated timestamp of the reward."
                    },
                    "recordTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the record was created."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/reward-claim": {
      "get": {
        "summary": "Reward Claims",
        "description": "Fetches a list of reward claims, optionally filtered by various parameters like root, earner, claimer, recipient, and token. The results are paginated.",
        "operationId": "getRewardClaims",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page. Defaults to 12."
            }
          },
          {
            "name": "root",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by root."
            }
          },
          {
            "name": "earner",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by earner."
            }
          },
          {
            "name": "claimer",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by claimer."
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by recipient."
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by token."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing the reward claims data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "root": {
                            "type": "string",
                            "description": "The root associated with the claim."
                          },
                          "earner": {
                            "type": "string",
                            "description": "The earner of the reward."
                          },
                          "claimer": {
                            "type": "string",
                            "description": "The claimer of the reward."
                          },
                          "recipient": {
                            "type": "string",
                            "description": "The recipient of the reward."
                          },
                          "token": {
                            "type": "string",
                            "description": "The token associated with the reward claim."
                          },
                          "claimedAmount": {
                            "type": "string",
                            "description": "The claimed amount in the reward claim."
                          },
                          "updatedAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string",
                                "description": "The block number associated with the reward claim update."
                              },
                              "blockTimestamp": {
                                "type": "string",
                                "description": "The block timestamp associated with the reward claim update."
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash associated with the reward claim update."
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of reward claims."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The limit (items per page)."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if there are more pages of results."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalRewardClaims": {
                              "type": "string",
                              "description": "The total number of reward claims."
                            },
                            "totalClaimedAmount": {
                              "type": "string",
                              "description": "The total amount claimed across all claims."
                            },
                            "uniqueTokens": {
                              "type": "integer",
                              "description": "The number of unique tokens across all claims."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/reward-strategy": {
      "get": {
        "summary": "Reward Strategy",
        "operationId": "getRewardStrategies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by strategy type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avs",
            "in": "query",
            "description": "Filter by AVS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter by token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "description": "Filter by strategy",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of reward strategies with metadata and statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "avs": {
                            "type": "string"
                          },
                          "strategy": {
                            "type": "string"
                          },
                          "rewardsSubmissionHash": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "weight": {
                            "type": "string"
                          },
                          "strategyReward": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "uniqueTokens": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "uniqueAVSs": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalStrategies": {
                              "type": "integer"
                            },
                            "uniqueTokens": {
                              "type": "integer"
                            },
                            "uniqueAVSs": {
                              "type": "integer"
                            },
                            "totalAmount": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/rewards-status": {
      "get": {
        "summary": "Rewards Status",
        "description": "Returns a paginated list of rewards filtered by status (active/inactive), with metadata and statistics.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number for pagination (default is 1).",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of results per page (default is 12).",
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "The status of the rewards (active or inactive). Default is 'active'.",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "default": "active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rewards fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of reward."
                          },
                          "avs": {
                            "type": "string",
                            "description": "The AVS address."
                          },
                          "submitter": {
                            "type": "string",
                            "description": "The submitter's address."
                          },
                          "tokenHopper": {
                            "type": "string",
                            "description": "The token hopper address."
                          },
                          "submissionNonce": {
                            "type": "string",
                            "description": "The submission nonce."
                          },
                          "rewardsSubmissionHash": {
                            "type": "string",
                            "description": "The hash of the rewards submission."
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "description": "The parsed strategies for the reward."
                          },
                          "token": {
                            "type": "string",
                            "description": "The reward token address."
                          },
                          "amount": {
                            "type": "string",
                            "description": "The reward amount."
                          },
                          "startTimestamp": {
                            "type": "string",
                            "description": "The start timestamp of the reward."
                          },
                          "duration": {
                            "type": "string",
                            "description": "The duration of the reward."
                          },
                          "updatedAt": {
                            "type": "object",
                            "description": "Metadata for the last update.",
                            "additionalProperties": true
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "The total number of rewards."
                        },
                        "page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "limit": {
                          "type": "integer",
                          "description": "The number of results per page."
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "The total number of pages."
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Indicates if there are more results available."
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalRewards": {
                              "type": "integer",
                              "description": "The total number of rewards."
                            },
                            "totalRewardAmount": {
                              "type": "number",
                              "description": "The total reward amount."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-stakers": {
      "get": {
        "summary": "All Stakers",
        "description": "Fetch staker information with pagination",
        "operationId": "getStakers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of stakers with pagination and statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "staker": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategy": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalStakers": {
                              "type": "integer"
                            },
                            "uniqueOperators": {
                              "type": "integer"
                            },
                            "strategyDistribution": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "integer"
                              }
                            },
                            "averageStrategiesPerStaker": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/staker-info": {
      "get": {
        "summary": "Staker Info",
        "description": "Fetch detailed information about a specific staker",
        "operationId": "getStakerDetail",
        "parameters": [
          {
            "name": "staker",
            "in": "query",
            "description": "The staker address to fetch details for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Staker details fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "staker": {
                      "type": "string",
                      "description": "The staker address."
                    },
                    "operator": {
                      "type": "string",
                      "description": "The operator associated with the staker."
                    },
                    "strategies": {
                      "type": "string",
                      "description": "The strategies associated with the staker."
                    },
                    "stakerUpdatedAt": {
                      "type": "object",
                      "properties": {
                        "blockNumber": {
                          "type": "string",
                          "description": "Block number."
                        },
                        "blockTimestamp": {
                          "type": "string",
                          "description": "Block timestamp."
                        },
                        "transactionHash": {
                          "type": "string",
                          "description": "Transaction hash."
                        }
                      },
                      "description": "The latest update details for the staker."
                    },
                    "operatorDetails": {
                      "type": "object",
                      "properties": {
                        "metadataURI": {
                          "type": "string",
                          "description": "The metadata URI for the operator."
                        },
                        "details": {
                          "type": "string",
                          "description": "Additional operator details."
                        },
                        "operatorUpdatedAt": {
                          "type": "object",
                          "properties": {
                            "blockNumber": {
                              "type": "string",
                              "description": "Block number."
                            },
                            "blockTimestamp": {
                              "type": "string",
                              "description": "Block timestamp."
                            },
                            "transactionHash": {
                              "type": "string",
                              "description": "Transaction hash."
                            }
                          },
                          "description": "The latest update details for the operator."
                        },
                        "operatorCreatedAt": {
                          "type": "object",
                          "properties": {
                            "blockNumber": {
                              "type": "string",
                              "description": "Block number."
                            },
                            "blockTimestamp": {
                              "type": "string",
                              "description": "Block timestamp."
                            },
                            "transactionHash": {
                              "type": "string",
                              "description": "Transaction hash."
                            }
                          },
                          "description": "The creation details for the operator."
                        }
                      },
                      "description": "Details of the associated operator."
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "metadataURI": {
                          "type": "string",
                          "description": "Metadata URI."
                        },
                        "synced": {
                          "type": "string",
                          "description": "Sync status of the metadata."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the entity."
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the entity."
                        },
                        "logo": {
                          "type": "string",
                          "description": "Logo URL."
                        },
                        "website": {
                          "type": "string",
                          "description": "Website URL."
                        },
                        "telegram": {
                          "type": "string",
                          "description": "Telegram handle."
                        },
                        "discord": {
                          "type": "string",
                          "description": "Discord link."
                        },
                        "x": {
                          "type": "string",
                          "description": "X (formerly Twitter) handle."
                        }
                      },
                      "description": "Additional metadata information."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/staker-activity": {
      "get": {
        "summary": "Staker Activity",
        "description": "Fetches activities for a specific staker",
        "operationId": "getActivities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "staker",
            "in": "query",
            "description": "Staker address or identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of activities for the specified staker with metadata and statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "staker": {
                            "type": "string"
                          },
                          "strategy": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "avs": {
                            "type": "string"
                          },
                          "pod": {
                            "type": "string"
                          },
                          "data": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalActivities": {
                              "type": "integer"
                            },
                            "uniqueActions": {
                              "type": "integer"
                            },
                            "uniquePods": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/staker-historical": {
      "get": {
        "summary": "Staker Historical",
        "description": "Fetch a paginated list of staker details with global statistics",
        "operationId": "getStakerList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination, defaults to 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page, defaults to 12",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "staker",
            "in": "query",
            "description": "The staker address to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of staker details with global statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "staker": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategy": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalEntries": {
                              "type": "integer"
                            },
                            "uniqueOperators": {
                              "type": "integer"
                            },
                            "totalStrategies": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-strategies": {
      "get": {
        "summary": "All Strategies",
        "description": "Fetch a paginated list of strategies with details and global statistics",
        "operationId": "getStrategyList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination, defaults to 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page, defaults to 12",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategy": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "whitelisted": {
                            "type": "boolean"
                          },
                          "thirdPartyTransfersForbidden": {
                            "type": "boolean"
                          },
                          "withdrawalDelayBlocks": {
                            "type": "integer"
                          },
                          "tvl": {
                            "type": "string"
                          },
                          "withdrawals": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "sharesUnderlying": {
                            "type": "string"
                          },
                          "dollarPrice": {
                            "type": "string"
                          },
                          "ethPrice": {
                            "type": "string"
                          },
                          "tokens": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalStrategies": {
                              "type": "integer"
                            },
                            "uniqueTokens": {
                              "type": "integer"
                            },
                            "whitelistedStrategiesCount": {
                              "type": "integer"
                            },
                            "totalTokenValue": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/strategy-info": {
      "get": {
        "summary": "Strategy Info",
        "description": "Fetch detailed information for a specific strategy",
        "operationId": "getStrategyDetail",
        "parameters": [
          {
            "name": "strategy",
            "in": "query",
            "description": "The strategy address (required)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed information about the strategy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "strategy": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "whitelisted": {
                      "type": "boolean"
                    },
                    "thirdPartyTransfersForbidden": {
                      "type": "boolean"
                    },
                    "withdrawalDelayBlocks": {
                      "type": "integer"
                    },
                    "tvl": {
                      "type": "number"
                    },
                    "withdrawals": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "object",
                      "properties": {
                        "blockNumber": {
                          "type": "string"
                        },
                        "blockTimestamp": {
                          "type": "string"
                        },
                        "transactionHash": {
                          "type": "string"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "object",
                      "properties": {
                        "blockNumber": {
                          "type": "string"
                        },
                        "blockTimestamp": {
                          "type": "string"
                        },
                        "transactionHash": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, strategy address is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Strategy not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/eigenlayer/strategy-activity": {
      "get": {
        "summary": "Strategy Activity",
        "description": "Fetch a paginated list of activities related to a specific strategy with global statistics",
        "operationId": "getActivityList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination, defaults to 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page, defaults to 12",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "description": "The strategy to filter activities by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of activities related to the strategy with global statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "staker": {
                            "type": "string"
                          },
                          "strategy": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "avs": {
                            "type": "string"
                          },
                          "pod": {
                            "type": "string"
                          },
                          "data": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalActivities": {
                              "type": "integer"
                            },
                            "uniqueActions": {
                              "type": "integer"
                            },
                            "uniqueStakers": {
                              "type": "integer"
                            },
                            "uniquePods": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/strategy-historical": {
      "get": {
        "summary": "Strategy Historical",
        "description": "Fetch paginated statistics for a specific strategy and global statistics",
        "operationId": "getStrategyStats",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination, defaults to 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page, defaults to 12",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "description": "The strategy identifier (required)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated strategy statistics with global statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategy": {
                            "type": "string"
                          },
                          "tvl": {
                            "type": "number"
                          },
                          "withdrawals": {
                            "type": "number"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalStats": {
                              "type": "integer"
                            },
                            "totalTvl": {
                              "type": "number"
                            },
                            "totalWithdrawals": {
                              "type": "number"
                            },
                            "averageTvl": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/activity": {
      "get": {
        "summary": "Track Activities",
        "description": "Retrieve a list of activities with optional filters and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of activities per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Filter activities by action",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "AVS_METADATA_URI_UPDATED",
                "AVS_REGISTER_OPERATOR",
                "AVS_DEREGISTER_OPERATOR",
                "MINIMUM_WITHDRAWAL_DELAY_BLOCKS_UPDATED_GLOBAL",
                "OPERATOR_DETAILS_UPDATED",
                "OPERATOR_METADATA_URI_UPDATED",
                "OPERATOR_REGISTERED",
                "OPERATOR_SHARES_DECREASED",
                "OPERATOR_SHARES_INCREASED",
                "STAKER_DELEGATED",
                "STAKER_UNDELEGATED",
                "MINIMUM_WITHDRAWAL_DELAY_BLOCKS_UPDATED_STRATEGY",
                "WITHDRAWAL_COMPLETED",
                "WITHDRAWAL_MIGRATED",
                "WITHDRAWAL_QUEUED",
                "POD_SHARES_UPDATED",
                "POD_DEPLOYED",
                "REWARD_ACTIVATION_DELAY_UPDATED",
                "AVS_REWARD_SUBMISSION",
                "CLAIMER_UPDATED",
                "DISTRIBUTION_ROOT_DISABLED",
                "DISTRIBUTION_ROOT_SUBMITTED",
                "GLOBAL_COMMISSION_BIPS_UPDATED",
                "REWARDS_CLAIMED",
                "REWARD_SUBMITTER_FOR_ALL_UPDATED",
                "REWARD_SUBMISSION_FOR_ALL",
                "REWARD_SUBMISSION_FOR_EARNER",
                "REWARDS_UPDATER_UPDATED",
                "SHARES_DEPOSITED_IN_STRATEGY",
                "STRATEGY_WHITELISTING",
                "STRATEGY_WHITELISTER_CHANGED",
                "UPDATE_THIRD_PARTY_TRANSFERS_FORBIDDEN"
              ],
              "default": ""
            }
          },
          {
            "name": "operator",
            "in": "query",
            "description": "Filter activities by operator",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "staker",
            "in": "query",
            "description": "Filter activities by staker",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "description": "Filter activities by strategy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter activities by token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avs",
            "in": "query",
            "description": "Filter activities by AVS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pod",
            "in": "query",
            "description": "Filter activities by pod",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of activities with pagination and filters applied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "staker": {
                            "type": "string"
                          },
                          "strategy": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "avs": {
                            "type": "string"
                          },
                          "pod": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "timestamp": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalActivities": {
                              "type": "integer"
                            },
                            "uniqueActions": {
                              "type": "integer"
                            },
                            "uniqueOperators": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-tokens": {
      "get": {
        "summary": "Ecosystem Tokens",
        "description": "Fetches paginated list of tokens with optional filters and global statistics.",
        "operationId": "getTokens",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "description": "The page number for pagination. Defaults to 1."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "description": "The number of items per page for pagination. Defaults to 12."
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the token."
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The symbol of the token."
            }
          },
          {
            "name": "synced",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter by synced status of the token."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with token data and metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string"
                          },
                          "strategy": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "integer"
                          },
                          "synced": {
                            "type": "boolean"
                          },
                          "sharesUnderlying": {
                            "type": "number"
                          },
                          "ethPrice": {
                            "type": "number"
                          },
                          "dollarPrice": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalTokens": {
                              "type": "integer"
                            },
                            "syncedTokens": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/ecosystem-avs": {
      "get": {
        "summary": "Total AVS",
        "description": "Returns the latest avs count.",
        "responses": {
          "200": {
            "description": "Latest stats fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "avs": {
                          "type": "number",
                          "description": "The AVS value from the latest stats."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/ecosystem-withdrawals": {
      "get": {
        "summary": "Total Withdrawals",
        "description": "Returns the total count of queued withdrawals with the action SHARES_DEPOSITED_IN_STRATEGY.",
        "responses": {
          "200": {
            "description": "Withdrawal queued count fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "withdrawalQueuedCount": {
                          "type": "integer",
                          "description": "The total count of queued withdrawals."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/ecosystem-deposits": {
      "get": {
        "summary": "Total Deposits",
        "description": "Returns the total count of deposits where the action is 'SHARES_DEPOSITED_IN_STRATEGY'.",
        "responses": {
          "200": {
            "description": "Total deposit count fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalDeposits": {
                          "type": "integer",
                          "description": "The total number of deposits with the action 'SHARES_DEPOSITED_IN_STRATEGY'."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/ecosystem-operators": {
      "get": {
        "summary": "Total Operators",
        "description": "Returns the total count of distinct operators.",
        "responses": {
          "200": {
            "description": "Distinct operator count fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "operators": {
                          "type": "integer",
                          "description": "The total number of distinct operators."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/ecosystem-stakers": {
      "get": {
        "summary": "Total Stakers",
        "description": "Returns the stake summary including total unique stakers, delegated stakes, and undelegated stakes based on the latest record for each staker.",
        "responses": {
          "200": {
            "description": "Stake summary fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "allTime": {
                          "type": "integer",
                          "description": "Total number of unique stakers."
                        },
                        "delegatedWithOperator": {
                          "type": "integer",
                          "description": "Number of stakers who have delegated stakes with an operator."
                        },
                        "undelegatedWithoutOperator": {
                          "type": "integer",
                          "description": "Number of stakers who have not delegated stakes and do not have an operator."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/ecosystem-tvl": {
      "get": {
        "summary": "Total Value Locked",
        "description": "Returns the total value locked [Actively Delegated]",
        "responses": {
          "200": {
            "description": "Latest stats and token details fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "strategies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "strategy": {
                                "type": "string",
                                "description": "The strategy identifier."
                              },
                              "name": {
                                "type": "string",
                                "description": "The token name."
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The token symbol."
                              },
                              "shares": {
                                "type": "string",
                                "description": "The shares allocated to the strategy."
                              },
                              "tokens": {
                                "type": "string",
                                "description": "The calculated tokens based on shares and decimals."
                              },
                              "tvl": {
                                "type": "string",
                                "description": "The total value locked calculated based on token price and shares."
                              },
                              "sharesUnderlying": {
                                "type": "string",
                                "description": "The underlying shares of the token."
                              },
                              "dollarPrice": {
                                "type": "string",
                                "description": "The dollar price of the token."
                              },
                              "ethPrice": {
                                "type": "string",
                                "description": "The ETH price of the token."
                              },
                              "decimals": {
                                "type": "string",
                                "description": "The decimals of the token."
                              }
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "totalShares": {
                              "type": "string",
                              "description": "The total shares across all strategies."
                            }
                          }
                        },
                        "tokenStatistics": {
                          "type": "object",
                          "properties": {
                            "uniqueTokens": {
                              "type": "integer",
                              "description": "The count of unique tokens."
                            },
                            "totalTokenValue": {
                              "type": "number",
                              "description": "The total value of all tokens."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/all-withdrawals": {
      "get": {
        "summary": "All Withdrawals",
        "description": "Fetch a paginated list of withdrawals with optional filters",
        "operationId": "getWithdrawals",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number for pagination (default: 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items per page (default: 12)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          },
          {
            "name": "staker",
            "in": "query",
            "description": "Filter by staker address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withdrawalRoot",
            "in": "query",
            "description": "Filter by withdrawal root",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delegatedTo",
            "in": "query",
            "description": "Filter by delegated address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "completed",
            "in": "query",
            "description": "Filter by completion status (true or false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "migrated",
            "in": "query",
            "description": "Filter by migration status (true or false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with a paginated list of withdrawals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "withdrawalRoot": {
                            "type": "string"
                          },
                          "staker": {
                            "type": "string"
                          },
                          "delegatedTo": {
                            "type": "string"
                          },
                          "withdrawer": {
                            "type": "string"
                          },
                          "nonce": {
                            "type": "string"
                          },
                          "startBlock": {
                            "type": "string"
                          },
                          "withdrawal": {
                            "type": "string"
                          },
                          "migrated": {
                            "type": "boolean"
                          },
                          "completed": {
                            "type": "boolean"
                          },
                          "updatedAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string"
                              },
                              "blockTimestamp": {
                                "type": "string"
                              },
                              "transactionHash": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "object",
                            "properties": {
                              "blockNumber": {
                                "type": "string"
                              },
                              "blockTimestamp": {
                                "type": "string"
                              },
                              "transactionHash": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalWithdrawals": {
                              "type": "integer"
                            },
                            "completedWithdrawals": {
                              "type": "integer"
                            },
                            "migratedWithdrawals": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/eigenlayer/withdrawal-info": {
      "get": {
        "summary": "Withdrawal Info",
        "description": "Fetch the latest withdrawal for a given withdrawal root",
        "operationId": "getWithdrawalByRoot",
        "parameters": [
          {
            "name": "withdrawalRoot",
            "in": "query",
            "description": "The withdrawal root for which the latest withdrawal data is to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for pagination (default: 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items per page (default: 12)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the latest withdrawal data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "withdrawalRoot": {
                          "type": "string"
                        },
                        "staker": {
                          "type": "string"
                        },
                        "delegatedTo": {
                          "type": "string"
                        },
                        "withdrawer": {
                          "type": "string"
                        },
                        "nonce": {
                          "type": "string"
                        },
                        "startBlock": {
                          "type": "string"
                        },
                        "withdrawal": {
                          "type": "string"
                        },
                        "migrated": {
                          "type": "boolean"
                        },
                        "completed": {
                          "type": "boolean"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "withdrawalRoot": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "responses": {
      "400": {
        "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_request"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "bad_request"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#bad_request"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "401": {
        "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unauthorized"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#unauthorized"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "403": {
        "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "forbidden"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "forbidden"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#forbidden"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "404": {
        "description": "The server cannot find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "not_found"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "not_found"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#not_found"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "422": {
        "description": "The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unprocessable_entity"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unprocessable_entity"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#unprocessable_entity"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "429": {
        "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "rate_limit_exceeded"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "rate_limit_exceeded"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#rate_limit_exceeded"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "500": {
        "description": "The server has encountered a situation it does not know how to handle.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "internal_server_error"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "internal_server_error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#internal_server_error"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "x-api-key": "1mPU/TsWuVYqPx6fQNXbWQ==:T4fa4ltXa+LybOfCxz2eVhrZtLeqWz+0d4m691U+S4XPlpEKTJg5OM6Ok+ziqsjDOHadoeowzP+CJmwawtjSmw=="
      }
    }
  }
}