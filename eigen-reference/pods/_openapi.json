{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Eigen Explorer",
    "description": "Api reference for the Eigen Explorer",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.blockflow.network/rest/fbcc1fb0-7e72-4e5f-a711-879ee3e616ba"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/pods": {
      "get": {
        "operationId": "getPods",
        "summary": "Retrieve all EigenPods",
        "description": "Returns a paginated list of EigenPods with their metrics and recent transactions.",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of pods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "The address of the EigenPod",
                            "example": "0x1234..."
                          },
                          "owner": {
                            "type": "string",
                            "description": "The owner address of the EigenPod",
                            "example": "0xabcd..."
                          },
                          "createdAtBlock": {
                            "type": "integer",
                            "description": "Block number when the pod was created",
                            "example": 1234567
                          },
                          "updatedAtBlock": {
                            "type": "integer",
                            "description": "Block number when the pod was last updated",
                            "example": 1234568
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the pod was created",
                            "example": "2024-01-01T12:00:00.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the pod was last updated",
                            "example": "2024-01-01T12:30:00.000Z"
                          },
                          "metrics": {
                            "type": "object",
                            "properties": {
                              "totalTransactions": {
                                "type": "integer",
                                "description": "Total number of transactions for this pod",
                                "example": 10
                              },
                              "deposits": {
                                "type": "integer",
                                "description": "Number of deposit transactions",
                                "example": 6
                              },
                              "withdrawals": {
                                "type": "integer",
                                "description": "Number of withdrawal transactions",
                                "example": 4
                              },
                              "totalShares": {
                                "type": "string",
                                "description": "Total shares balance of the pod",
                                "example": "1000000000000000000"
                              }
                            }
                          },
                          "recentTransactions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "transactionHash": {
                                  "type": "string",
                                  "description": "Hash of the transaction",
                                  "example": "0x1234..."
                                },
                                "sharesDelta": {
                                  "type": "string",
                                  "description": "Change in shares from this transaction",
                                  "example": "1000000000"
                                },
                                "transactionIndex": {
                                  "type": "integer",
                                  "description": "Index of the transaction in the block",
                                  "example": 1
                                },
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Timestamp when the transaction was created",
                                  "example": "2024-01-01T12:00:00.000Z"
                                },
                                "createdAtBlock": {
                                  "type": "integer",
                                  "description": "Block number when the transaction was created",
                                  "example": 1234567
                                }
                              }
                            },
                            "description": "List of recent transactions for this pod",
                            "maxItems": 5
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of pods",
                          "example": 100
                        },
                        "skip": {
                          "type": "integer",
                          "description": "Number of items skipped for pagination",
                          "example": 0
                        },
                        "take": {
                          "type": "integer",
                          "description": "Number of items per page",
                          "example": 12
                        }
                      },
                      "required": ["total", "skip", "take"]
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/pods-all-address": {
      "get": {
        "operationId": "getPodsAllAddresses",
        "summary": "Retrieve EigenPods Addresses List",
        "description": "Returns a paginated list of EigenPods with basic information.",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of pods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "The address of the EigenPod",
                            "example": "0x1234567890123456789012345678901234567890"
                          },
                          "owner": {
                            "type": "string",
                            "description": "The owner address of the EigenPod",
                            "example": "0xabcd567890123456789012345678901234567890"
                          }
                        },
                        "required": ["address", "owner"]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of pods",
                          "example": 100
                        },
                        "skip": {
                          "type": "integer",
                          "description": "Number of items skipped for pagination",
                          "example": 0
                        },
                        "take": {
                          "type": "integer",
                          "description": "Number of items per page",
                          "example": 12
                        }
                      },
                      "required": ["total", "skip", "take"]
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid pagination parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Invalid page number", "Invalid limit"]
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/pod-by-address": {
      "get": {
        "operationId": "getPodByAddress",
        "summary": "Retrieve an EigenPod by address",
        "description": "Returns detailed information about a specific EigenPod, including its metrics and recent transactions.",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "The address of the EigenPod to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "example": "0x1234567890123456789012345678901234567890"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the pod details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "The address of the EigenPod",
                      "example": "0x1234567890123456789012345678901234567890"
                    },
                    "owner": {
                      "type": "string",
                      "description": "The owner address of the EigenPod",
                      "example": "0xabcd567890123456789012345678901234567890"
                    },
                    "createdAtBlock": {
                      "type": "integer",
                      "description": "Block number when the pod was created",
                      "example": 1234567
                    },
                    "updatedAtBlock": {
                      "type": "integer",
                      "description": "Block number when the pod was last updated",
                      "example": 1234568
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the pod was created",
                      "example": "2024-01-01T12:00:00.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the pod was last updated",
                      "example": "2024-01-01T12:30:00.000Z"
                    },
                    "metrics": {
                      "type": "object",
                      "properties": {
                        "totalTransactions": {
                          "type": "integer",
                          "description": "Total number of transactions for this pod",
                          "example": 10
                        },
                        "deposits": {
                          "type": "integer",
                          "description": "Number of deposit transactions",
                          "example": 6
                        },
                        "withdrawals": {
                          "type": "integer",
                          "description": "Number of withdrawal transactions",
                          "example": 4
                        },
                        "totalShares": {
                          "type": "string",
                          "description": "Total shares balance of the pod",
                          "example": "1000000000000000000"
                        }
                      },
                      "required": [
                        "totalTransactions",
                        "deposits",
                        "withdrawals",
                        "totalShares"
                      ]
                    },
                    "recentTransactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionHash": {
                            "type": "string",
                            "description": "Hash of the transaction",
                            "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                          },
                          "sharesDelta": {
                            "type": "string",
                            "description": "Change in shares from this transaction",
                            "example": "1000000000"
                          },
                          "transactionIndex": {
                            "type": "integer",
                            "description": "Index of the transaction in the block",
                            "example": 1
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the transaction was created",
                            "example": "2024-01-01T12:00:00.000Z"
                          },
                          "createdAtBlock": {
                            "type": "integer",
                            "description": "Block number when the transaction was created",
                            "example": 1234567
                          }
                        },
                        "required": [
                          "transactionHash",
                          "sharesDelta",
                          "transactionIndex",
                          "createdAt",
                          "createdAtBlock"
                        ]
                      },
                      "description": "List of recent transactions for this pod",
                      "maxItems": 10
                    }
                  },
                  "required": [
                    "address",
                    "owner",
                    "createdAtBlock",
                    "updatedAtBlock",
                    "createdAt",
                    "updatedAt",
                    "metrics",
                    "recentTransactions"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Pod address is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Pod address is required"]
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "Pod not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Pod not found"]
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/pods-by-owner": {
      "get": {
        "operationId": "getPodsByOwner",
        "summary": "Retrieve EigenPods by owner address",
        "description": "Returns a paginated list of EigenPods owned by a specific address, including their metrics and recent transactions.",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "The owner address to retrieve pods for",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "example": "0x1234567890123456789012345678901234567890"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of pods for the owner",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "The address of the EigenPod",
                            "example": "0x1234567890123456789012345678901234567890"
                          },
                          "owner": {
                            "type": "string",
                            "description": "The owner address of the EigenPod",
                            "example": "0xabcd567890123456789012345678901234567890"
                          },
                          "createdAtBlock": {
                            "type": "integer",
                            "description": "Block number when the pod was created",
                            "example": 1234567
                          },
                          "updatedAtBlock": {
                            "type": "integer",
                            "description": "Block number when the pod was last updated",
                            "example": 1234568
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the pod was created",
                            "example": "2024-01-01T12:00:00.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the pod was last updated",
                            "example": "2024-01-01T12:30:00.000Z"
                          },
                          "metrics": {
                            "type": "object",
                            "properties": {
                              "totalTransactions": {
                                "type": "integer",
                                "description": "Total number of transactions for this pod",
                                "example": 10
                              },
                              "deposits": {
                                "type": "integer",
                                "description": "Number of deposit transactions",
                                "example": 6
                              },
                              "withdrawals": {
                                "type": "integer",
                                "description": "Number of withdrawal transactions",
                                "example": 4
                              },
                              "totalShares": {
                                "type": "string",
                                "description": "Total shares balance of the pod",
                                "example": "1000000000000000000"
                              }
                            },
                            "required": [
                              "totalTransactions",
                              "deposits",
                              "withdrawals",
                              "totalShares"
                            ]
                          }
                        },
                        "required": [
                          "address",
                          "owner",
                          "createdAtBlock",
                          "updatedAtBlock",
                          "createdAt",
                          "updatedAt",
                          "metrics"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of pods owned by the address",
                          "example": 100
                        },
                        "skip": {
                          "type": "integer",
                          "description": "Number of items skipped for pagination",
                          "example": 0
                        },
                        "take": {
                          "type": "integer",
                          "description": "Number of items per page",
                          "example": 12
                        }
                      },
                      "required": ["total", "skip", "take"]
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "description": "Owner address is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Owner address is required"]
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/pods-transaction": {
      "get": {
        "operationId": "getPodsTransactions",
        "summary": "Retrieve all EigenPod Transactions",
        "description": "Returns a paginated list of EigenPod transactions with their details.",
        "tags": ["Transactions"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of pod transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionHash": {
                            "type": "string",
                            "description": "Hash of the transaction",
                            "example": "0x1234..."
                          },
                          "podAddress": {
                            "type": "string",
                            "description": "The address of the EigenPod",
                            "example": "0x1234..."
                          },
                          "podOwner": {
                            "type": "string",
                            "description": "The owner address of the EigenPod",
                            "example": "0xabcd..."
                          },
                          "sharesDelta": {
                            "type": "string",
                            "description": "Change in shares from this transaction",
                            "example": "1000000000"
                          },
                          "transactionIndex": {
                            "type": "integer",
                            "description": "Index of the transaction in the block",
                            "example": 1
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the transaction was created",
                            "example": "2024-01-01T12:00:00.000Z"
                          },
                          "createdAtBlock": {
                            "type": "integer",
                            "description": "Block number when the transaction was created",
                            "example": 1234567
                          }
                        },
                        "required": [
                          "transactionHash",
                          "podAddress",
                          "sharesDelta",
                          "transactionIndex",
                          "createdAt",
                          "createdAtBlock"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of transactions",
                          "example": 100
                        },
                        "skip": {
                          "type": "integer",
                          "description": "Number of items skipped for pagination",
                          "example": 0
                        },
                        "take": {
                          "type": "integer",
                          "description": "Number of items per page",
                          "example": 12
                        }
                      },
                      "required": ["total", "skip", "take"]
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/pod-transaction": {
      "get": {
        "operationId": "getPodTransactions",
        "summary": "Retrieve transactions for a specific EigenPod",
        "description": "Returns a paginated list of transactions for a given EigenPod address.",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "The address of the EigenPod",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of pod transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionHash": {
                            "type": "string",
                            "description": "Hash of the transaction",
                            "example": "0x1234..."
                          },
                          "podAddress": {
                            "type": "string",
                            "description": "Address of the EigenPod",
                            "example": "0xabcd..."
                          },
                          "podOwner": {
                            "type": "string",
                            "description": "Owner address of the EigenPod",
                            "example": "0xefgh..."
                          },
                          "sharesDelta": {
                            "type": "string",
                            "description": "Change in shares from this transaction",
                            "example": "1000000000"
                          },
                          "transactionIndex": {
                            "type": "integer",
                            "description": "Index of the transaction in the block",
                            "example": 1
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the transaction was created",
                            "example": "2024-01-01T12:00:00.000Z"
                          },
                          "createdAtBlock": {
                            "type": "integer",
                            "description": "Block number when the transaction was created",
                            "example": 1234567
                          }
                        },
                        "required": [
                          "transactionHash",
                          "podAddress",
                          "podOwner",
                          "sharesDelta",
                          "transactionIndex",
                          "createdAt",
                          "createdAtBlock"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of transactions",
                          "example": 100
                        },
                        "skip": {
                          "type": "integer",
                          "description": "Number of items skipped for pagination",
                          "example": 0
                        },
                        "take": {
                          "type": "integer",
                          "description": "Number of items per page",
                          "example": 12
                        }
                      },
                      "required": ["total", "skip", "take"]
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "400": {
        "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["bad_request"],
                      "description": "A short code indicating the error code returned.",
                      "example": "bad_request"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#bad_request"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "401": {
        "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["unauthorized"],
                      "description": "A short code indicating the error code returned.",
                      "example": "unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#unauthorized"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "403": {
        "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["forbidden"],
                      "description": "A short code indicating the error code returned.",
                      "example": "forbidden"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#forbidden"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "404": {
        "description": "The server cannot find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["not_found"],
                      "description": "A short code indicating the error code returned.",
                      "example": "not_found"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#not_found"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "422": {
        "description": "The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["unprocessable_entity"],
                      "description": "A short code indicating the error code returned.",
                      "example": "unprocessable_entity"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#unprocessable_entity"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "429": {
        "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["rate_limit_exceeded"],
                      "description": "A short code indicating the error code returned.",
                      "example": "rate_limit_exceeded"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#rate_limit_exceeded"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "500": {
        "description": "The server has encountered a situation it does not know how to handle.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["internal_server_error"],
                      "description": "A short code indicating the error code returned.",
                      "example": "internal_server_error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#internal_server_error"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "x-api-key": "1mPU/TsWuVYqPx6fQNXbWQ==:T4fa4ltXa+LybOfCxz2eVhrZtLeqWz+0d4m691U+S4XPlpEKTJg5OM6Ok+ziqsjDOHadoeowzP+CJmwawtjSmw=="
      }
    }
  }
}
