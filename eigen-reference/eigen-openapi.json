{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Eigen Explorer",
    "description": "Api reference for the Eigen Explorer",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.blockflow.network/rest/fbcc1fb0-7e72-4e5f-a711-879ee3e616ba"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/history-by-operator": {
      "post": {
        "operationId": "historyByOperator",
        "summary": "Retrieve Operator Activity History",
        "description": "Retrive if operator is registered, joined, or left AVS",
        "tags": ["Operators"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operatorAddress": {
                    "type": "string",
                    "description": "The operator's address",
                    "example": "0x1234567890abcdef1234567890abcdef12345678"
                  },
                  "page": {
                    "type": "number",
                    "description": "The page number to retrieve",
                    "example": 1,
                    "default": 1
                  },
                  "limit": {
                    "type": "number",
                    "description": "The number of records per page",
                    "example": 12,
                    "default": 12
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The list of operator activity history.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "The HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operatorAddress": {
                                "type": "string",
                                "description": "The operator's address",
                                "example": "0x1234567890abcdef1234567890abcdef12345678"
                              },
                              "avsAddress": {
                                "type": "string",
                                "description": "The AVS's address",
                                "example": "0x1234567890abcdef1234567890abcdef12345678"
                              },
                              "event": {
                                "type": "string",
                                "description": "The event type",
                                "example": "registered"
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash",
                                "example": "0x1234567890abcdef1234567890abcdef12345678"
                              },
                              "createdAt": {
                                "type": "number",
                                "description": "The timestamp of the event",
                                "example": 1620000000
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "The block number of the event",
                                "example": 12345678
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of records in the database",
                              "example": 30
                            },
                            "page": {
                              "type": "number",
                              "description": "The page number of the current query",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "description": "The number of records returned for this query",
                              "example": 12
                            }
                          },
                          "required": ["total", "page", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/restake-history-by-operator": {
      "post": {
        "operationId": "restakeHistoryByOperator",
        "summary": "Retrieve Restake History by Operator",
        "description": "Retrive restake history by operator",
        "tags": ["Operators"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operatorAddress": {
                    "type": "string",
                    "description": "The operator's address",
                    "example": "0x1234567890abcdef1234567890abcdef12345678"
                  },
                  "page": {
                    "type": "number",
                    "description": "The page number to retrieve",
                    "example": 1,
                    "default": 1
                  },
                  "limit": {
                    "type": "number",
                    "description": "The number of records per page",
                    "example": 12,
                    "default": 12
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The list of restake history by operator.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "The HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operatorAddress": {
                                "type": "string",
                                "description": "The operator's address",
                                "example": "0x1234567890abcdef1234567890abcdef12345678"
                              },
                              "stakerAddress": {
                                "type": "string",
                                "description": "The Stakers's address",
                                "example": "0x1234567890abcdef1234567890abcdef12345678"
                              },
                              "action": {
                                "type": "string",
                                "description": "The event type",
                                "example": "delegated"
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "strategy": {
                                      "type": "string",
                                      "description": "The strategy",
                                      "example": "0x1234567890abcdef1234567890abcdef12345678"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "The shares",
                                      "example": "100"
                                    }
                                  }
                                }
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "The transaction hash",
                                "example": "0x1234567890abcdef1234567890abcdef12345678"
                              },
                              "createdAt": {
                                "type": "number",
                                "description": "The timestamp of the event",
                                "example": 1620000000
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "The block number of the event",
                                "example": 12345678
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of records in the database",
                              "example": 30
                            },
                            "page": {
                              "type": "number",
                              "description": "The page number of the current query",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "description": "The number of records returned for this query",
                              "example": 12
                            }
                          },
                          "required": ["total", "page", "limit"]
                        }
                      }
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics": {
      "post": {
        "operationId": "getAllMetrics",
        "summary": "Retrieve summary metrics",
        "description": "Returns summary metrics, including TVLs for both restaking strategies and the Beacon Chain ETH strategy, as well as the total number of AVS, operators, and stakers.",
        "tags": ["Metrics"],
        "responses": {
          "200": {
            "description": "The list of summary metrics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "tvlBeaconChain": {
                              "type": "number",
                              "description": "The total value locked (TVL) in ETH in the beacon chain ETH strategy",
                              "example": 1000000
                            },
                            "tvlStrategies": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                "example": 1000000
                              },
                              "description": "The total value locked (TVL) in each restaking strategy, denominated in the strategy's native token",
                              "example": {
                                "cbETH": 1000000,
                                "stETH": 2000000
                              }
                            },
                            "totalAVS": {
                              "type": "number",
                              "description": "The total number of AVS",
                              "example": 10
                            },
                            "totalOperators": {
                              "type": "number",
                              "description": "The total number of AVS operators",
                              "example": 10
                            },
                            "totalStakers": {
                              "type": "number",
                              "description": "The total number of AVS stakers",
                              "example": 10
                            }
                          },
                          "required": [
                            "tvlBeaconChain",
                            "tvlStrategies",
                            "totalAVS",
                            "totalOperators",
                            "totalStakers"
                          ]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics-tvl": {
      "post": {
        "operationId": "getTvlMetrics",
        "summary": "Retrieve total TVL",
        "description": "Returns the total value locked (TVL) in all restaking strategies and Beacon Chain restaking.",
        "tags": ["Metrics"],
        "responses": {
          "200": {
            "description": "The value of the combined TVL in ETH.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "tvlBeaconChain": {
                              "type": "number",
                              "description": "The total value locked (TVL) in ETH in the beacon chain ETH strategy",
                              "example": 1000000
                            },
                            "tvlStrategies": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                "example": 1000000
                              },
                              "description": "The total value locked (TVL) in each restaking strategy, denominated in the strategy's native token",
                              "example": {
                                "cbETH": 1000000,
                                "stETH": 2000000
                              }
                            }
                          },
                          "required": ["tvlBeaconChain", "tvlStrategies"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics-tvl-strategy": {
      "post": {
        "operationId": "getTvlRestakingMetricByStrategy",
        "summary": "Retrieve a strategy TVL by name",
        "description": "Returns the total value locked (TVL) in a specific LST strategy.",
        "tags": ["Metrics"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "strategyName": {
                    "type": "string",
                    "description": "The name of the restaking strategy",
                    "example": "cbETH"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The value of combined restaking strategy TVL and a breakdown of the TVL for each individual strategy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "tvl": {
                              "type": "number",
                              "description": "The value of the restaking strategy TVL, denominated in the strategy's native token",
                              "example": 1000000
                            }
                          },
                          "required": ["tvl"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/total-avs": {
      "post": {
        "operationId": "getTotalAvsMetric",
        "summary": "Retrieve total number of AVS",
        "description": "Returns the total number of AVS registered.",
        "tags": ["Metrics"],
        "responses": {
          "200": {
            "description": "The total number of AVS registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "The total number of AVS registered",
                              "example": 1000000
                            }
                          },
                          "required": ["total"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/total-operators": {
      "post": {
        "operationId": "getTotalOperatorsMetric",
        "summary": "Retrieve total number of AVS operators",
        "description": "Returns the total number of AVS operators registered.",
        "tags": ["Metrics"],
        "responses": {
          "200": {
            "description": "The total number of AVS operators registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "The total number of AVS operators registered",
                              "example": 1000000
                            }
                          },
                          "required": ["total"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/total-stakers": {
      "post": {
        "operationId": "getTotalStakerssMetric",
        "summary": "Retrieve total number of AVS stakers",
        "description": "Returns the total number of AVS stakers registered.",
        "tags": ["Metrics"],
        "responses": {
          "200": {
            "description": "The total number of AVS stakers registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "The total number of AVS stakers registered",
                              "example": 1000000
                            }
                          },
                          "required": ["total"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/total-withdrawals": {
      "post": {
        "operationId": "getTotalWithdrawals",
        "summary": "Retrieve total number of withdrawals ",
        "description": "Returns the total number of withdrawals.",
        "tags": ["Metrics"],
        "responses": {
          "200": {
            "description": "The total number of withdrawals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "The total number of withdrawals",
                              "example": 1000000
                            },
                            "pending": {
                              "type": "number",
                              "description": "The  pending number of withdrawals",
                              "example": 1000000
                            },
                            "completed": {
                              "type": "number",
                              "description": "The completed number of withdrawals",
                              "example": 1000000
                            }
                          },
                          "required": ["total", "pending", "completed"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/total-deposits": {
      "post": {
        "operationId": "getTotalDeposits",
        "summary": "Retrieve total number of deposits",
        "description": "Returns the total number of deposits.",
        "tags": ["Metrics"],
        "responses": {
          "200": {
            "description": "The total number of deposits.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "The total number of deposits",
                              "example": 1000000
                            }
                          },
                          "required": ["total"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers": {
      "post": {
        "operationId": "getAllStakers",
        "summary": "Retrieve all stakers",
        "description": "Fetches a paginated list of all stakers with their operator assignments and share distributions across strategies.",
        "tags": ["Stakers"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of records per page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of stakers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The staker's address",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "operatorAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The operator's address that this staker is delegating to",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the staker was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the staker was last updated",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the staker was created",
                                "example": 19631203
                              },
                              "updatedAtBlock": {
                                "type": "number",
                                "description": "Block number when the staker was last updated",
                                "example": 19631205
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "strategyAddress": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "The strategy contract address",
                                      "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "Number of shares in the strategy",
                                      "example": "135064894598947935263152"
                                    }
                                  },
                                  "required": ["strategyAddress", "shares"]
                                },
                                "description": "Array of strategy shares held by the staker"
                              }
                            },
                            "required": [
                              "address",
                              "operatorAddress",
                              "createdAt",
                              "updatedAt",
                              "createdAtBlock",
                              "updatedAtBlock",
                              "shares"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of stakers",
                              "example": 30
                            },
                            "page": {
                              "type": "number",
                              "description": "Current page number",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "page", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": [
                            "Invalid page number",
                            "Invalid limit value"
                          ]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch stakers list"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/staker-by-address": {
      "post": {
        "operationId": "getStakerByAddress",
        "summary": "Retrieve staker details for a specific address",
        "description": "Fetches detailed information about a specific staker including their operator assignment and share distributions across strategies.",
        "tags": ["Stakers"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The staker's address",
              "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved staker details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$",
                          "description": "The staker's address",
                          "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                        },
                        "operatorAddress": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$",
                          "description": "The operator's address that this staker is delegating to",
                          "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the staker was created",
                          "example": "2024-02-01T12:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the staker was last updated",
                          "example": "2024-02-01T12:00:00.000Z"
                        },
                        "createdAtBlock": {
                          "type": "number",
                          "description": "Block number when the staker was created",
                          "example": 19631203
                        },
                        "updatedAtBlock": {
                          "type": "number",
                          "description": "Block number when the staker was last updated",
                          "example": 19631205
                        },
                        "shares": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "strategyAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The strategy contract address",
                                "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                              },
                              "shares": {
                                "type": "string",
                                "description": "Number of shares in the strategy",
                                "example": "135064894598947935263152"
                              }
                            },
                            "required": ["strategyAddress", "shares"]
                          },
                          "description": "Array of strategy shares held by the staker"
                        }
                      },
                      "required": [
                        "address",
                        "operatorAddress",
                        "createdAt",
                        "updatedAt",
                        "createdAtBlock",
                        "updatedAtBlock",
                        "shares"
                      ]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing address parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Staker address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Staker address does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Staker not found"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch staker details"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/staker-withdrawals-all": {
      "post": {
        "operationId": "getStakerWithdrawals",
        "summary": "Retrieve all withdrawals for a specific staker",
        "description": "Fetches a paginated list of withdrawal records for a specific staker, including completed and pending withdrawals.",
        "tags": ["Stakers", "Withdrawals"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The staker's address",
              "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved staker's withdrawals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "withdrawalRoot": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "The unique identifier for this withdrawal",
                                "example": "0x123...def"
                              },
                              "nonce": {
                                "type": "number",
                                "description": "Withdrawal nonce",
                                "example": 1
                              },
                              "stakerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the staker",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "delegatedTo": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The operator address this withdrawal is delegated to",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "withdrawerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address that can complete this withdrawal",
                                "example": "0x5678eb09213bdd3698bd8afb43ec3cb0ecff1234"
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "strategy": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "Strategy contract address",
                                      "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "Number of shares being withdrawn",
                                      "example": "135064894598947935263152"
                                    }
                                  },
                                  "required": ["strategy", "shares"]
                                },
                                "description": "Array of strategy shares being withdrawn"
                              },
                              "isCompleted": {
                                "type": "boolean",
                                "description": "Whether the withdrawal has been completed",
                                "example": false
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the withdrawal was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the withdrawal was last updated",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the withdrawal was created",
                                "example": 19631203
                              },
                              "updatedAtBlock": {
                                "type": "number",
                                "description": "Block number when the withdrawal was last updated",
                                "example": 19631205
                              }
                            },
                            "required": [
                              "withdrawalRoot",
                              "nonce",
                              "stakerAddress",
                              "delegatedTo",
                              "withdrawerAddress",
                              "shares",
                              "isCompleted",
                              "createdAt",
                              "updatedAt",
                              "createdAtBlock",
                              "updatedAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of withdrawals",
                              "example": 30
                            },
                            "skip": {
                              "type": "number",
                              "description": "Number of records skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "skip", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or missing staker address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Staker address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch staker withdrawals"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/staker-withdrawal-completed": {
      "post": {
        "operationId": "getStakerCompletedWithdrawals",
        "summary": "Retrieve completed withdrawals for a specific staker",
        "description": "Fetches a paginated list of completed withdrawal records for a specific staker.",
        "tags": ["Stakers", "Withdrawals"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The staker's address",
              "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved staker's completed withdrawals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "withdrawalRoot": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "The unique identifier for this withdrawal",
                                "example": "0x123...def"
                              },
                              "nonce": {
                                "type": "number",
                                "description": "Withdrawal nonce",
                                "example": 1
                              },
                              "stakerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the staker",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "delegatedTo": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The operator address this withdrawal was delegated to",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "withdrawerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address that completed this withdrawal",
                                "example": "0x5678eb09213bdd3698bd8afb43ec3cb0ecff1234"
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "strategy": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "Strategy contract address",
                                      "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "Number of shares withdrawn",
                                      "example": "135064894598947935263152"
                                    }
                                  },
                                  "required": ["strategy", "shares"]
                                },
                                "description": "Array of strategy shares that were withdrawn"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the withdrawal was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the withdrawal was completed",
                                "example": "2024-02-01T13:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the withdrawal was created",
                                "example": 19631203
                              },
                              "updatedAtBlock": {
                                "type": "number",
                                "description": "Block number when the withdrawal was completed",
                                "example": 19631205
                              }
                            },
                            "required": [
                              "withdrawalRoot",
                              "nonce",
                              "stakerAddress",
                              "delegatedTo",
                              "withdrawerAddress",
                              "shares",
                              "createdAt",
                              "updatedAt",
                              "createdAtBlock",
                              "updatedAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of completed withdrawals",
                              "example": 30
                            },
                            "skip": {
                              "type": "number",
                              "description": "Number of records skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "skip", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or missing staker address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Staker address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": [
                            "Failed to fetch staker completed withdrawals"
                          ]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/staker-deposits": {
      "post": {
        "operationId": "getStakerDeposits",
        "summary": "Retrieve deposits for a specific staker",
        "description": "Fetches a paginated list of deposit records for a specific staker.",
        "tags": ["Stakers", "Deposits"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The staker's address",
              "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved staker's deposits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "transactionHash": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "Hash of the deposit transaction",
                                "example": "0x123...def"
                              },
                              "stakerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the staker",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "tokenAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the deposited token",
                                "example": "0x6b175474e89094c44da98b954eedeac495271d0f"
                              },
                              "strategyAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the strategy contract",
                                "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                              },
                              "shares": {
                                "type": "string",
                                "description": "Number of shares received for the deposit",
                                "example": "135064894598947935263152"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the deposit was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the deposit was created",
                                "example": 19631203
                              }
                            },
                            "required": [
                              "transactionHash",
                              "stakerAddress",
                              "tokenAddress",
                              "strategyAddress",
                              "shares",
                              "createdAt",
                              "createdAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of deposits",
                              "example": 30
                            },
                            "skip": {
                              "type": "number",
                              "description": "Number of records skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "skip", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or missing staker address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Staker address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch staker deposits"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/staker-withdrawals-queued": {
      "post": {
        "operationId": "getStakerQueuedWithdrawals",
        "summary": "Retrieve queued withdrawals for a specific staker",
        "description": "Fetches a paginated list of pending (non-completed) withdrawal records for a specific staker.",
        "tags": ["Stakers", "Withdrawals"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The staker's address",
              "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved staker's queued withdrawals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "withdrawalRoot": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "The unique identifier for this withdrawal",
                                "example": "0x123...def"
                              },
                              "nonce": {
                                "type": "number",
                                "description": "Withdrawal nonce",
                                "example": 1
                              },
                              "stakerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the staker",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "delegatedTo": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The operator address this withdrawal is delegated to",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "withdrawerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address that can complete this withdrawal",
                                "example": "0x5678eb09213bdd3698bd8afb43ec3cb0ecff1234"
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "strategy": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "Strategy contract address",
                                      "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "Number of shares being withdrawn",
                                      "example": "135064894598947935263152"
                                    }
                                  },
                                  "required": ["strategy", "shares"]
                                },
                                "description": "Array of strategy shares being withdrawn"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the withdrawal was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the withdrawal was created",
                                "example": 19631203
                              }
                            },
                            "required": [
                              "withdrawalRoot",
                              "nonce",
                              "stakerAddress",
                              "delegatedTo",
                              "withdrawerAddress",
                              "shares",
                              "createdAt",
                              "createdAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of queued withdrawals",
                              "example": 30
                            },
                            "skip": {
                              "type": "number",
                              "description": "Number of records skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "skip", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or missing staker address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Staker address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": [
                            "Failed to fetch staker queued withdrawals"
                          ]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/avs": {
      "post": {
        "operationId": "getAllAvs",
        "summary": "Retrieve all AVS",
        "description": "Returns all AVS records. This endpoint supports pagination.",
        "tags": ["AVS"],
        "parameters": [
          {
            "name": "sortByTotalOperators",
            "in": "query",
            "description": "Sort results in asc or desc order of total AVS (only valid for AVS queries)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "desc"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 12,
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of AVS records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "description": "The status of the request",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "AVS service manager contract address",
                                    "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                                  },
                                  "metadataName": {
                                    "type": "string",
                                    "description": "The name of the AVS",
                                    "example": "Example AVS"
                                  },
                                  "metadataDescription": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description of the AVS",
                                    "example": "This is an example AVS"
                                  },
                                  "metadataDiscord": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's Discord server",
                                    "example": "https://discord.com/invite/abcdefghij"
                                  },
                                  "metadataLogo": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's logo",
                                    "example": "https://example.com/logo.png"
                                  },
                                  "metadataTelegram": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's Telegram channel",
                                    "example": "https://t.me/acme"
                                  },
                                  "metadataWebsite": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's website",
                                    "example": "https://acme.com"
                                  },
                                  "metadataX": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's X",
                                    "example": "https://twitter.com/acme"
                                  },
                                  "metadataURI": {
                                    "type": "string",
                                    "description": "The URI of the AVS metadata",
                                    "example": "https://example.com/metadata.json"
                                  },
                                  "isMetadataSynced": {
                                    "type": "boolean",
                                    "description": "Whether the metadata is synced",
                                    "example": true
                                  },
                                  "totalStakers": {
                                    "type": "integer",
                                    "description": "The total number of stakers staking in the AVS",
                                    "example": 10
                                  },
                                  "totalOperators": {
                                    "type": "integer",
                                    "description": "The total number of operators operating the AVS",
                                    "example": 10
                                  },
                                  "createdAtBlock": {
                                    "type": "integer",
                                    "description": "The block number at which the AVS was created",
                                    "example": 19631203
                                  },
                                  "updatedAtBlock": {
                                    "type": "integer",
                                    "description": "The block number at which the AVS was last updated",
                                    "example": 19631203
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp at which the AVS was created",
                                    "example": "2024-11-05T06:47:47.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp at which the AVS was last updated",
                                    "example": "2024-11-05T06:47:47.000Z"
                                  },
                                  "shares": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "strategyAddress": {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{40}$",
                                          "description": "The contract address of the restaking strategy",
                                          "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                        },
                                        "shares": {
                                          "type": "string",
                                          "description": "The amount of shares held in the strategy",
                                          "example": "1277920000000000000000000"
                                        }
                                      },
                                      "required": ["strategyAddress", "shares"]
                                    },
                                    "description": "The strategy shares held in the AVS"
                                  }
                                },
                                "required": [
                                  "address",
                                  "metadataName",
                                  "metadataDescription",
                                  "metadataLogo",
                                  "metadataDiscord",
                                  "metadataX",
                                  "metadataWebsite",
                                  "metadataTelegram",
                                  "metadataURI",
                                  "isMetadataSynced",
                                  "totalStakers",
                                  "totalOperators",
                                  "createdAtBlock",
                                  "updatedAtBlock",
                                  "createdAt",
                                  "updatedAt",
                                  "shares"
                                ]
                              }
                            },
                            "meta": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "description": "Total number of records in the database",
                                  "example": 30
                                },
                                "page": {
                                  "type": "integer",
                                  "description": "The page number of the current query",
                                  "example": 1
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "The number of records returned for this query",
                                  "example": 12
                                }
                              },
                              "required": ["total", "page", "limit"]
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs-all-address": {
      "post": {
        "operationId": "getAllAvsAddresses",
        "summary": "Retrieve all AVS addresses",
        "description": "Returns a list of all AVS addresses. This endpoint supports pagination.",
        "tags": ["AVS"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 12,
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of AVS addresses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "AVS service manager contract address",
                                    "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the AVS",
                                    "example": "EigenDA"
                                  },
                                  "logo": {
                                    "type": "string",
                                    "description": "The logo of the AVS",
                                    "example": "https://example.com/logo.png"
                                  },
                                  "uri": {
                                    "type": "string",
                                    "description": "The metadata URI of the AVS",
                                    "example": "https://example.com/metadata.json"
                                  }
                                },
                                "required": ["address", "name", "logo", "uri"]
                              }
                            },
                            "meta": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "integer",
                                  "description": "Total number of records in the database",
                                  "example": 27
                                },
                                "page": {
                                  "type": "integer",
                                  "description": "The page number of the current query",
                                  "example": 1
                                },
                                "limit": {
                                  "type": "integer",
                                  "description": "The number of records returned for this query",
                                  "example": 12
                                }
                              },
                              "required": ["total", "page", "limit"]
                            }
                          },
                          "required": ["data", "meta"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs-by-address": {
      "post": {
        "operationId": "getAvsByAddress",
        "summary": "Retrieve an AVS details for a specific address",
        "description": "Returns a single AVS record by address.",
        "tags": ["AVS"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "AVS service manager contract address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The AVS record found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{40}$",
                              "description": "AVS service manager contract address",
                              "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
                            },
                            "totalStakers": {
                              "type": "integer",
                              "description": "The total number of stakers staking in the AVS",
                              "example": 153023
                            },
                            "totalActiveOperators": {
                              "type": "integer",
                              "description": "The total number of active operators in the AVS",
                              "example": 219
                            },
                            "totalRegisteredOperators": {
                              "type": "string",
                              "description": "The total number of registered operators in the AVS",
                              "example": "552"
                            },
                            "createdAtBlock": {
                              "type": "string",
                              "description": "The block number at which the AVS was created",
                              "example": "19592323"
                            },
                            "updatedAtBlock": {
                              "type": "string",
                              "description": "The block number at which the AVS was last updated",
                              "example": "19592323"
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "The timestamp at which the AVS was created",
                              "example": "2024-04-05T21:49:59.000Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "description": "The timestamp at which the AVS was last updated",
                              "example": "2024-04-05T21:49:59.000Z"
                            },
                            "curatedMetadata": {
                              "type": "object",
                              "properties": {
                                "avsAddress": {
                                  "type": "string",
                                  "description": "The AVS address",
                                  "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
                                },
                                "metadataName": {
                                  "type": "string",
                                  "description": "The name of the AVS",
                                  "example": "EigenDA"
                                },
                                "metadataDescription": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The description of the AVS",
                                  "example": "EigenDA is a data availability solution with 10 MiB/s of write throughput and the lowest cost in its class."
                                },
                                "metadataDiscord": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The URL of the AVS's Discord server",
                                  "example": ""
                                },
                                "metadataLogo": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The URL of the AVS's logo",
                                  "example": "https://mainnet-ethereum-avs-metadata.s3.amazonaws.com/markEigenDA.png"
                                },
                                "metadataTelegram": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The URL of the AVS's Telegram channel",
                                  "example": ""
                                },
                                "metadataWebsite": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The URL of the AVS's website",
                                  "example": "https://docs.eigenlayer.xyz/eigenda/overview/"
                                },
                                "metadataX": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The URL of the AVS's X (formerly Twitter) account",
                                  "example": "https://twitter.com/eigen_da"
                                },
                                "metadataGithub": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The GitHub URL for the AVS",
                                  "example": null
                                },
                                "metadataTokenAddress": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The token address associated with the AVS",
                                  "example": null
                                }
                              },
                              "required": [
                                "avsAddress",
                                "metadataName",
                                "metadataDescription",
                                "metadataLogo",
                                "metadataWebsite"
                              ]
                            },
                            "shares": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "strategyAddress": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "The contract address of the restaking strategy",
                                    "example": "0x01f3be8090c3f3a273c9cd598d8cfc94854a45dd"
                                  },
                                  "underlygingToken": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "The underlying token address of the strategy",
                                    "example": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
                                  },
                                  "shares": {
                                    "type": "string",
                                    "description": "The amount of shares held in the strategy",
                                    "example": "104.211865480443592701"
                                  }
                                },
                                "required": [
                                  "strategyAddress",
                                  "underlygingToken",
                                  "shares"
                                ]
                              },
                              "description": "The strategy shares held in the AVS"
                            }
                          },
                          "required": [
                            "address",
                            "totalStakers",
                            "totalActiveOperators",
                            "totalRegisteredOperators",
                            "createdAtBlock",
                            "updatedAtBlock",
                            "createdAt",
                            "updatedAt",
                            "curatedMetadata",
                            "shares"
                          ]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs-its-stakers": {
      "post": {
        "operationId": "getAvsStakersByAddress",
        "summary": "Retrieve all stakers for a given AVS address",
        "description": "Returns all stakers for a given AVS address. This endpoint supports pagination.",
        "tags": ["AVS"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "AVS service manager contract address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve",
            "schema": {
              "type": "number",
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records per page",
            "schema": {
              "type": "number",
              "default": 12,
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The stakers record found for the AVS.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "The contract address of the staker",
                                    "example": "0x0000006c21964af0d420af8992851a30fa13a68b"
                                  },
                                  "operatorAddress": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "The address of the operator",
                                    "example": "0x71c6f7ed8c2d4925d0baf16f6a85bb1736d412eb"
                                  },
                                  "createdAtBlock": {
                                    "type": "string",
                                    "description": "The block number at which the Staker made first delegation",
                                    "example": "19631203"
                                  },
                                  "updatedAtBlock": {
                                    "type": "string",
                                    "description": "The block number at which the Staker made last delegation",
                                    "example": "20146916"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "The timestamp at which the Staker made first delegation",
                                    "example": "2024-05-13T11:49:35.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "description": "The timestamp at which the Staker made last delegation",
                                    "example": "2024-06-22T11:21:59.000Z"
                                  },
                                  "shares": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "strategy": {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{40}$",
                                          "description": "The contract address of the restaking strategy",
                                          "example": "0xacb55c530acdb2849e6d4f36992cd8c9d50ed8f7"
                                        },
                                        "shares": {
                                          "type": "string",
                                          "description": "The amount of shares held in the strategy",
                                          "example": "230909115959999994061"
                                        }
                                      },
                                      "required": ["strategy", "shares"]
                                    }
                                  }
                                },
                                "required": [
                                  "address",
                                  "operatorAddress",
                                  "createdAtBlock",
                                  "updatedAtBlock",
                                  "createdAt",
                                  "updatedAt",
                                  "shares"
                                ]
                              }
                            },
                            "meta": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "number",
                                  "description": "Total number of records in the database",
                                  "example": 89954
                                },
                                "page": {
                                  "type": "number",
                                  "description": "The page number of the current query",
                                  "example": 1
                                },
                                "limit": {
                                  "type": "number",
                                  "description": "The number of records returned for this query",
                                  "example": 12
                                }
                              },
                              "required": ["total", "page", "limit"]
                            }
                          },
                          "required": ["data", "meta"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs-its-operators": {
      "post": {
        "operationId": "getAvsOperatorsByAddress",
        "summary": "Retrieve all operators for a given AVS address",
        "description": "Returns all operators for a given AVS address. This endpoint supports pagination.",
        "tags": ["AVS"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "AVS service manager contract address",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve",
            "schema": {
              "type": "number",
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records per page",
            "schema": {
              "type": "number",
              "default": 12,
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operators record found for the AVS.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "The contract address of the AVS operator",
                                    "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                                  },
                                  "metadataName": {
                                    "type": "string",
                                    "description": "The name of the AVS",
                                    "example": "Google Cloud Web3"
                                  },
                                  "metadataDescription": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description of the AVS",
                                    "example": "Build and scale faster with simple, secure tools and infrastructure for Web3."
                                  },
                                  "metadataDiscord": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's Discord server",
                                    "example": "https://discord.com/invite/abcdefghij"
                                  },
                                  "metadataLogo": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's logo",
                                    "example": "https://example.com/logo.png"
                                  },
                                  "metadataTelegram": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's Telegram channel",
                                    "example": "https://t.me/acme"
                                  },
                                  "metadataWebsite": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's website",
                                    "example": "https://acme.com"
                                  },
                                  "metadataX": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's X",
                                    "example": "https://twitter.com/acme"
                                  },
                                  "metadataURI": {
                                    "type": "string",
                                    "description": "The URI of the AVS metadata",
                                    "example": "https://example.com/metadata.json"
                                  },
                                  "isMetadataSynced": {
                                    "type": "boolean",
                                    "description": "Whether the metadata is synced",
                                    "example": true
                                  },
                                  "createdAtBlock": {
                                    "type": "string",
                                    "description": "The block number at which the AVS Operator was registered",
                                    "example": "19631203"
                                  },
                                  "updatedAtBlock": {
                                    "type": "string",
                                    "description": "The block number at which the AVS Operator registration was last updated",
                                    "example": "21094737"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "The timestamp at which the AVS Operator was registered",
                                    "example": "2024-04-09T18:50:11.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "description": "The timestamp at which the AVS Operator registration was last updated",
                                    "example": "2024-11-01T18:57:47.000Z"
                                  },
                                  "shares": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "strategy": {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{40}$",
                                          "description": "The contract address of the restaking strategy",
                                          "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                        },
                                        "shares": {
                                          "type": "string",
                                          "description": "The amount of shares held in the strategy",
                                          "example": "40074843548537495320"
                                        }
                                      },
                                      "required": ["strategy", "shares"]
                                    }
                                  },
                                  "restakedStrategies": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$"
                                    },
                                    "description": "The list of restaked strategies",
                                    "example": [
                                      "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                                    ]
                                  },
                                  "totalStakers": {
                                    "type": "number",
                                    "description": "The total number of stakers who have delegated to this AVS operator",
                                    "example": 50
                                  }
                                },
                                "required": [
                                  "address",
                                  "metadataName",
                                  "metadataDescription",
                                  "metadataLogo",
                                  "metadataDiscord",
                                  "metadataX",
                                  "metadataWebsite",
                                  "metadataTelegram",
                                  "metadataURI",
                                  "isMetadataSynced",
                                  "createdAtBlock",
                                  "updatedAtBlock",
                                  "createdAt",
                                  "updatedAt",
                                  "shares",
                                  "restakedStrategies",
                                  "totalStakers"
                                ]
                              }
                            },
                            "meta": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "number",
                                  "description": "Total number of records in the database",
                                  "example": 219
                                },
                                "page": {
                                  "type": "number",
                                  "description": "The page number of the current query",
                                  "example": 1
                                },
                                "limit": {
                                  "type": "number",
                                  "description": "The number of records returned for this query",
                                  "example": 12
                                }
                              },
                              "required": ["total", "page", "limit"]
                            }
                          },
                          "required": ["data", "meta"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/deposits": {
      "post": {
        "operationId": "getAllDeposits",
        "summary": "Retrieve all deposits",
        "description": "Fetches a paginated list of all deposit records across all stakers, ordered by creation time in descending order.",
        "tags": ["Deposits"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved deposits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "transactionHash": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "Hash of the deposit transaction",
                                "example": "0x123...def"
                              },
                              "stakerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the staker who made the deposit",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "tokenAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the deposited token",
                                "example": "0x6b175474e89094c44da98b954eedeac495271d0f"
                              },
                              "strategyAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the strategy contract",
                                "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                              },
                              "shares": {
                                "type": "string",
                                "description": "Number of shares received for the deposit",
                                "example": "135064894598947935263152"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the deposit was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the deposit was created",
                                "example": 19631203
                              }
                            },
                            "required": [
                              "transactionHash",
                              "stakerAddress",
                              "tokenAddress",
                              "strategyAddress",
                              "shares",
                              "createdAt",
                              "createdAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of deposits",
                              "example": 30
                            },
                            "skip": {
                              "type": "number",
                              "description": "Number of records skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "skip", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": [
                            "Invalid page number",
                            "Invalid limit value"
                          ]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch deposits"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/withdrawals": {
      "post": {
        "operationId": "getAllWithdrawals",
        "summary": "Retrieve all withdrawals",
        "description": "Fetches a paginated list of all withdrawal records across all stakers, including both completed and pending withdrawals, ordered by creation time in descending order.",
        "tags": ["Withdrawals"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved withdrawals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "withdrawalRoot": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "The unique identifier for this withdrawal",
                                "example": "0x123...def"
                              },
                              "nonce": {
                                "type": "number",
                                "description": "Withdrawal nonce",
                                "example": 1
                              },
                              "stakerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address of the staker",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "delegatedTo": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The operator address this withdrawal is delegated to",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "withdrawerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The address that can complete this withdrawal",
                                "example": "0x5678eb09213bdd3698bd8afb43ec3cb0ecff1234"
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "strategy": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "Strategy contract address",
                                      "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "Number of shares being withdrawn",
                                      "example": "135064894598947935263152"
                                    }
                                  },
                                  "required": ["strategy", "shares"]
                                },
                                "description": "Array of strategy shares being withdrawn"
                              },
                              "isCompleted": {
                                "type": "boolean",
                                "description": "Whether the withdrawal has been completed",
                                "example": false
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the withdrawal was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the withdrawal was last updated",
                                "example": "2024-02-01T13:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the withdrawal was created",
                                "example": 19631203
                              },
                              "updatedAtBlock": {
                                "type": "number",
                                "description": "Block number when the withdrawal was last updated",
                                "example": 19631205
                              }
                            },
                            "required": [
                              "withdrawalRoot",
                              "nonce",
                              "stakerAddress",
                              "delegatedTo",
                              "withdrawerAddress",
                              "shares",
                              "isCompleted",
                              "createdAt",
                              "createdAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of withdrawals",
                              "example": 30
                            },
                            "skip": {
                              "type": "number",
                              "description": "Number of records skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "skip", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": [
                            "Invalid page number",
                            "Invalid limit value"
                          ]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch withdrawals"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/withdrawals-by-withdrawal-root": {
      "post": {
        "operationId": "getWithdrawalByRoot",
        "summary": "Retrieve withdrawal details by withdrawal root",
        "description": "Fetches detailed information about a specific withdrawal using its withdrawal root identifier.",
        "tags": ["Withdrawals"],
        "parameters": [
          {
            "name": "root",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{64}$",
              "description": "The withdrawal root identifier",
              "example": "0x123...def"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved withdrawal details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "withdrawalRoot": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{64}$",
                          "description": "The unique identifier for this withdrawal",
                          "example": "0x123...def"
                        },
                        "nonce": {
                          "type": "number",
                          "description": "Withdrawal nonce",
                          "example": 1
                        },
                        "stakerAddress": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$",
                          "description": "The address of the staker",
                          "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                        },
                        "delegatedTo": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$",
                          "description": "The operator address this withdrawal is delegated to",
                          "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                        },
                        "withdrawerAddress": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$",
                          "description": "The address that can complete this withdrawal",
                          "example": "0x5678eb09213bdd3698bd8afb43ec3cb0ecff1234"
                        },
                        "shares": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "strategy": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "Strategy contract address",
                                "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                              },
                              "shares": {
                                "type": "string",
                                "description": "Number of shares being withdrawn",
                                "example": "135064894598947935263152"
                              }
                            },
                            "required": ["strategy", "shares"]
                          },
                          "description": "Array of strategy shares being withdrawn"
                        },
                        "isCompleted": {
                          "type": "boolean",
                          "description": "Whether the withdrawal has been completed",
                          "example": false
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the withdrawal was created",
                          "example": "2024-02-01T12:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the withdrawal was last updated",
                          "example": "2024-02-01T13:00:00.000Z"
                        },
                        "createdAtBlock": {
                          "type": "number",
                          "description": "Block number when the withdrawal was created",
                          "example": 19631203
                        },
                        "updatedAtBlock": {
                          "type": "number",
                          "description": "Block number when the withdrawal was last updated",
                          "example": 19631205
                        }
                      },
                      "required": [
                        "withdrawalRoot",
                        "nonce",
                        "stakerAddress",
                        "delegatedTo",
                        "withdrawerAddress",
                        "shares",
                        "isCompleted",
                        "createdAt",
                        "createdAtBlock",
                        "updatedAt",
                        "updatedAtBlock"
                      ]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing withdrawal root",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Withdrawal root is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Withdrawal root does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Withdrawal not found"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch withdrawal"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/operators": {
      "post": {
        "operationId": "getAllOperators",
        "summary": "Retrieve all operators",
        "description": "Fetches all operator records with pagination support. Use query parameters to specify page number and limit.",
        "tags": ["Operators"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of operator records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "The contract address of the AVS operator",
                                    "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                                  },
                                  "metadataName": {
                                    "type": "string",
                                    "description": "The name of the AVS",
                                    "example": "Example AVS"
                                  },
                                  "metadataDescription": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description of the AVS",
                                    "example": "This is an example AVS"
                                  },
                                  "metadataDiscord": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's Discord server",
                                    "example": "https://discord.com/invite/abcdefghij"
                                  },
                                  "metadataLogo": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's logo",
                                    "example": "https://example.com/logo.png"
                                  },
                                  "metadataTelegram": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's Telegram channel",
                                    "example": "https://t.me/acme"
                                  },
                                  "metadataWebsite": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's website",
                                    "example": "https://acme.com"
                                  },
                                  "metadataX": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The URL of the AVS's X",
                                    "example": "https://twitter.com/acme"
                                  },
                                  "metadataURI": {
                                    "type": "string",
                                    "description": "The URI of the AVS metadata",
                                    "example": "https://example.com/metadata.json"
                                  },
                                  "isMetadataSynced": {
                                    "type": "boolean",
                                    "description": "Whether the metadata is synced",
                                    "example": true
                                  },
                                  "totalStakers": {
                                    "type": "number",
                                    "description": "The total number of stakers who have delegated to this AVS operator",
                                    "example": 10
                                  },
                                  "totalAvs": {
                                    "type": "number",
                                    "description": "The total number of AVS opted by the AVS operator",
                                    "example": 10
                                  },
                                  "createdAtBlock": {
                                    "type": "number",
                                    "description": "The block number at which the AVS Operator was registered",
                                    "example": 19631203
                                  },
                                  "updatedAtBlock": {
                                    "type": "number",
                                    "description": "The block number at which the AVS Operator registration was last updated",
                                    "example": 19631203
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "The time stamp at which the AVS Operator was registered",
                                    "example": 1727836560
                                  },
                                  "updatedAt": {
                                    "type": "number",
                                    "description": "The time stamp at which the AVS Operator registration was last updated",
                                    "example": 1727836560
                                  },
                                  "shares": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "strategyAddress": {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{40}$",
                                          "description": "The contract address of the restaking strategy",
                                          "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                        },
                                        "shares": {
                                          "type": "string",
                                          "description": "The amount of shares held in the strategy",
                                          "example": "1277920000000000000000000"
                                        }
                                      },
                                      "required": ["strategyAddress", "shares"]
                                    },
                                    "description": "The strategy shares held in the AVS operator",
                                    "example": [
                                      {
                                        "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                        "shares": "135064894598947935263152"
                                      },
                                      {
                                        "strategyAddress": "0x54945180db7943c0ed0fee7edab2bd24620256bc",
                                        "shares": "9323641881708650182301"
                                      }
                                    ]
                                  },
                                  "avsRegistrations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "avsAddress": {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{40}$",
                                          "description": "AVS service manager contract address",
                                          "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
                                        },
                                        "isActive": {
                                          "type": "boolean",
                                          "description": "True indicates operator is an active participant while False indicates it used to be one but not anymore",
                                          "example": false
                                        }
                                      },
                                      "required": ["avsAddress", "isActive"]
                                    },
                                    "description": "Operator AVS registrations and their participation status",
                                    "example": [
                                      {
                                        "avsAddress": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0",
                                        "isActive": true
                                      },
                                      {
                                        "avsAddress": "0xe8e59c6c8b56f2c178f63bcfc4ce5e5e2359c8fc",
                                        "isActive": false
                                      }
                                    ]
                                  },
                                  "tvl": {
                                    "type": "object",
                                    "properties": {
                                      "tvlBeaconChain": {
                                        "type": "number",
                                        "description": "The TVL of Beacon Chain restaking strategy in ETH",
                                        "example": 1000000
                                      },
                                      "tvlWETH": {
                                        "type": "number",
                                        "description": "The TVL of WETH restaking strategy in ETH",
                                        "example": 1000000
                                      },
                                      "tvlStrategies": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "number",
                                          "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                          "example": 1000000
                                        },
                                        "description": "The TVL of each individual restaking strategy in its native token",
                                        "example": {
                                          "Eigen": 1000000,
                                          "cbETH": 2000000
                                        }
                                      }
                                    },
                                    "required": [
                                      "tvlBeaconChain",
                                      "tvlWETH",
                                      "tvlStrategies"
                                    ],
                                    "description": "The total value locked (TVL) in the AVS operator",
                                    "example": {
                                      "tvlBeaconChain": 1000000,
                                      "tvlWETH": 1000000,
                                      "tvlStrategies": {
                                        "Eigen": 1000000,
                                        "cbETH": 2000000
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "address",
                                  "metadataName",
                                  "metadataDescription",
                                  "metadataLogo",
                                  "metadataDiscord",
                                  "metadataX",
                                  "metadataWebsite",
                                  "metadataTelegram",
                                  "metadataURI",
                                  "isMetadataSynced",
                                  "totalStakers",
                                  "totalAvs",
                                  "createdAtBlock",
                                  "updatedAtBlock",
                                  "createdAt",
                                  "updatedAt",
                                  "shares",
                                  "avsRegistrations"
                                ]
                              }
                            },
                            "meta": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "number",
                                  "description": "Total number of records in the database",
                                  "example": 30
                                },
                                "page": {
                                  "type": "number",
                                  "description": "The page number of the current response",
                                  "example": 1
                                },
                                "limit": {
                                  "type": "number",
                                  "description": "The number of records returned for this query",
                                  "example": 12
                                }
                              },
                              "required": ["total", "page", "limit"]
                            }
                          },
                          "required": ["data", "meta"]
                        }
                      },
                      "required": ["data"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/operator-by-address": {
      "post": {
        "operationId": "getOperatorByAddress",
        "summary": "Retrieve operator details for a specific address",
        "description": "Returns an operator record by address.",
        "tags": ["Operators"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record of the requested operator.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "number",
                          "description": "The HTTP status code",
                          "example": 200
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{40}$",
                              "description": "The contract address of the AVS operator",
                              "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                            },
                            "metadataName": {
                              "type": "string",
                              "description": "The name of the AVS",
                              "example": "Example AVS"
                            },
                            "metadataDescription": {
                              "type": "string",
                              "nullable": true,
                              "description": "The description of the AVS",
                              "example": "This is an example AVS"
                            },
                            "metadataDiscord": {
                              "type": "string",
                              "nullable": true,
                              "format": "uri",
                              "description": "The URL of the AVS's Discord server",
                              "example": "https://discord.com/invite/abcdefghij"
                            },
                            "metadataLogo": {
                              "type": "string",
                              "nullable": true,
                              "format": "uri",
                              "description": "The URL of the AVS's logo",
                              "example": "https://example.com/logo.png"
                            },
                            "metadataTelegram": {
                              "type": "string",
                              "nullable": true,
                              "format": "uri",
                              "description": "The URL of the AVS's Telegram channel",
                              "example": "https://t.me/acme"
                            },
                            "metadataWebsite": {
                              "type": "string",
                              "nullable": true,
                              "format": "uri",
                              "description": "The URL of the AVS's website",
                              "example": "https://acme.com"
                            },
                            "metadataX": {
                              "type": "string",
                              "nullable": true,
                              "format": "uri",
                              "description": "The URL of the AVS's X",
                              "example": "https://twitter.com/acme"
                            },
                            "metadataURI": {
                              "type": "string",
                              "description": "The URI of the AVS metadata",
                              "example": "https://example.com/metadata.json"
                            },
                            "isMetadataSynced": {
                              "type": "boolean",
                              "description": "Whether the metadata is synced",
                              "example": true
                            },
                            "totalStakers": {
                              "type": "number",
                              "description": "The total number of stakers who have delegated to this AVS operator",
                              "example": 10
                            },
                            "totalAvs": {
                              "type": "number",
                              "description": "The total number of AVS opted by the AVS operator",
                              "example": 10
                            },
                            "createdAtBlock": {
                              "type": "number",
                              "description": "The block number at which the AVS Operator was registered",
                              "example": 19631203
                            },
                            "updatedAtBlock": {
                              "type": "number",
                              "description": "The block number at which the AVS Operator registration was last updated",
                              "example": 19631203
                            },
                            "createdAt": {
                              "type": "number",
                              "description": "The time stamp at which the AVS Operator was registered",
                              "example": 1727836560
                            },
                            "updatedAt": {
                              "type": "number",
                              "description": "The time stamp at which the AVS Operator registration was last updated",
                              "example": 1727836560
                            },
                            "shares": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "strategyAddress": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "The contract address of the restaking strategy",
                                    "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                  },
                                  "shares": {
                                    "type": "string",
                                    "description": "The amount of shares held in the strategy",
                                    "example": "1277920000000000000000000"
                                  }
                                },
                                "required": ["strategyAddress", "shares"]
                              },
                              "description": "The strategy shares held in the AVS operator",
                              "example": [
                                {
                                  "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                  "shares": "135064894598947935263152"
                                },
                                {
                                  "strategyAddress": "0x54945180db7943c0ed0fee7edab2bd24620256bc",
                                  "shares": "9323641881708650182301"
                                }
                              ]
                            },
                            "avsRegistrations": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "avsAddress": {
                                    "type": "string",
                                    "pattern": "^0x[a-fA-F0-9]{40}$",
                                    "description": "AVS service manager contract address",
                                    "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "True indicates operator is an active participant while False indicates it used to be one but not anymore",
                                    "example": false
                                  }
                                },
                                "required": ["avsAddress", "isActive"]
                              },
                              "description": "Operator AVS registrations and their participation status",
                              "example": [
                                {
                                  "avsAddress": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0",
                                  "isActive": true
                                },
                                {
                                  "avsAddress": "0xe8e59c6c8b56f2c178f63bcfc4ce5e5e2359c8fc",
                                  "isActive": false
                                }
                              ]
                            }
                          },
                          "required": [
                            "address",
                            "metadataName",
                            "metadataDescription",
                            "metadataLogo",
                            "metadataDiscord",
                            "metadataX",
                            "metadataWebsite",
                            "metadataTelegram",
                            "metadataURI",
                            "isMetadataSynced",
                            "totalStakers",
                            "totalAvs",
                            "createdAtBlock",
                            "updatedAtBlock",
                            "createdAt",
                            "updatedAt",
                            "shares",
                            "avsRegistrations"
                          ]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/operators-all-address": {
      "post": {
        "operationId": "getOperatorAddresses",
        "summary": "Retrieve all operator addresses with basic metadata",
        "description": "Fetches a paginated list of operator addresses along with their names and logos.",
        "tags": ["Operators"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved operator addresses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The contract address of the operator",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the operator",
                                "example": "Example Operator"
                              },
                              "logo": {
                                "type": "string",
                                "nullable": true,
                                "format": "uri",
                                "description": "The URL of the operator's logo",
                                "example": "https://example.com/logo.png"
                              }
                            },
                            "required": ["address", "name"]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of operators in the database",
                              "example": 30
                            },
                            "page": {
                              "type": "number",
                              "description": "Current page number",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "page", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": [
                            "Invalid page number",
                            "Invalid limit value"
                          ]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch operator addresses"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/operator-stakers": {
      "post": {
        "operationId": "getOperatorStakers",
        "summary": "Retrieve all stakers for a specific operator",
        "description": "Fetches a paginated list of stakers who have delegated to a specific operator, including their shares across different strategies.",
        "tags": ["Operators"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The operator's address",
              "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved operator's stakers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The staker's address",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the staker was created",
                                "example": 19631203
                              },
                              "updatedAtBlock": {
                                "type": "number",
                                "description": "Block number when the staker was last updated",
                                "example": 19631205
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the staker was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the staker was last updated",
                                "example": "2024-02-01T13:30:00.000Z"
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "stakerAddress": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "The staker's address",
                                      "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                                    },
                                    "strategyAddress": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "The strategy contract address",
                                      "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "Number of shares in the strategy",
                                      "example": "135064894598947935263152"
                                    }
                                  },
                                  "required": [
                                    "stakerAddress",
                                    "strategyAddress",
                                    "shares"
                                  ]
                                },
                                "description": "Array of staker shares across different strategies"
                              }
                            },
                            "required": [
                              "address",
                              "createdAtBlock",
                              "updatedAtBlock",
                              "createdAt",
                              "updatedAt",
                              "shares"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of stakers for this operator",
                              "example": 30
                            },
                            "skip": {
                              "type": "number",
                              "description": "Number of records skipped",
                              "example": 0
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "skip", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or missing operator address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Operator address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch operator stakers"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/operator-staker-history": {
      "post": {
        "operationId": "getOperatorStakerHistory",
        "summary": "Retrieve staking history for a specific operator",
        "description": "Fetches a paginated list of historical staking actions (restaking events) associated with a specific operator.",
        "tags": ["Operators"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The operator's address",
              "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved operator's staking history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The operator's address",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "stakerAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The staker's address",
                                "example": "0x1234eb09213bdd3698bd8afb43ec3cb0ecff5678"
                              },
                              "transactionHash": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "Hash of the transaction",
                                "example": "0x123...abc"
                              },
                              "action": {
                                "type": "string",
                                "description": "Type of staking action performed",
                                "example": "delegate"
                              },
                              "shares": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "strategy": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{40}$",
                                      "description": "Strategy contract address",
                                      "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564d"
                                    },
                                    "shares": {
                                      "type": "string",
                                      "description": "Number of shares",
                                      "example": "135064894598947935263152"
                                    }
                                  },
                                  "required": ["strategy", "shares"]
                                },
                                "description": "Array of strategy shares involved in the action"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the action was created",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the action was last updated",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the action was created",
                                "example": 19631203
                              },
                              "updatedAtBlock": {
                                "type": "number",
                                "description": "Block number when the action was last updated",
                                "example": 19631203
                              }
                            },
                            "required": [
                              "address",
                              "stakerAddress",
                              "transactionHash",
                              "action",
                              "shares",
                              "createdAt",
                              "createdAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of history records",
                              "example": 30
                            },
                            "page": {
                              "type": "number",
                              "description": "Current page number",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "page", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or missing operator address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Operator address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch operator staker history"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    },
    "/operator-avs-history": {
      "post": {
        "operationId": "getOperatorAvsHistory",
        "summary": "Retrieve AVS history for a specific operator",
        "description": "Fetches a paginated list of historical AVS-related events for a specific operator, ordered by block number in descending order.",
        "tags": ["Operators"],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The operator's address",
              "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 12,
              "description": "The number of records per page",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved operator's AVS history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP status code",
                      "example": 200
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The operator's address",
                                "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                              },
                              "avsAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "The AVS contract address",
                                "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
                              },
                              "event": {
                                "type": "string",
                                "description": "Type of AVS event",
                                "example": "registered"
                              },
                              "transactionHash": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{64}$",
                                "description": "Hash of the transaction",
                                "example": "0x123...abc"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp when the event occurred",
                                "example": "2024-02-01T12:00:00.000Z"
                              },
                              "createdAtBlock": {
                                "type": "number",
                                "description": "Block number when the event occurred",
                                "example": 19631203
                              }
                            },
                            "required": [
                              "address",
                              "avsAddress",
                              "event",
                              "transactionHash",
                              "createdAt",
                              "createdAtBlock"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "Total number of history records",
                              "example": 30
                            },
                            "page": {
                              "type": "number",
                              "description": "Current page number",
                              "example": 1
                            },
                            "limit": {
                              "type": "number",
                              "description": "Number of records per page",
                              "example": 12
                            }
                          },
                          "required": ["total", "page", "limit"]
                        }
                      },
                      "required": ["data", "meta"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or missing operator address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of validation errors",
                          "example": ["Operator address is required"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 500
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Error message",
                          "example": ["Failed to fetch operator history"]
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "body"]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "400": {
        "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["bad_request"],
                      "description": "A short code indicating the error code returned.",
                      "example": "bad_request"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#bad_request"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "401": {
        "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["unauthorized"],
                      "description": "A short code indicating the error code returned.",
                      "example": "unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#unauthorized"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "403": {
        "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["forbidden"],
                      "description": "A short code indicating the error code returned.",
                      "example": "forbidden"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#forbidden"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "404": {
        "description": "The server cannot find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["not_found"],
                      "description": "A short code indicating the error code returned.",
                      "example": "not_found"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#not_found"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "422": {
        "description": "The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["unprocessable_entity"],
                      "description": "A short code indicating the error code returned.",
                      "example": "unprocessable_entity"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#unprocessable_entity"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "429": {
        "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["rate_limit_exceeded"],
                      "description": "A short code indicating the error code returned.",
                      "example": "rate_limit_exceeded"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#rate_limit_exceeded"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      },
      "500": {
        "description": "The server has encountered a situation it does not know how to handle.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["internal_server_error"],
                      "description": "A short code indicating the error code returned.",
                      "example": "internal_server_error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.rescan.dev.com/api-reference/errors#internal_server_error"
                    }
                  },
                  "required": ["code", "message"]
                }
              },
              "required": ["error"]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}
